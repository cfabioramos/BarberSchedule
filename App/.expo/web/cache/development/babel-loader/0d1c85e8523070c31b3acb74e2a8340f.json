{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\desenvolvimento\\\\BarberSchedule\\\\App\\\\src\\\\screens\\\\SignUp\\\\index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { DEFAULT_COLLOR_PALLET } from \"../ColorsPalette\";\nimport { validateEmail } from \"../../util/Validator\";\nimport ImagePickerComponent from \"../../components/ImagePickerComponent\";\nimport { TOKEN_KEY, GET_ERROR_MESSAGE } from \"../../util/Commons\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport ModalErro from \"../../components/ModalErro\";\nimport { Container, InputArea, CustomButton, CustomButtonText, SignMessageButton, SignMessageButtonText, SignMessageButtonTextBold, ImageArea } from \"./styles\";\nimport InputComponent from \"../../components/InputComponent\";\nimport SignDropdown from \"../../components/SignDropdown\";\nimport Api from \"../../Api\";\nimport Commons from \"../../util/Commons\";\nimport BarberLogo from \"../../assets/barber_2.svg\";\nimport PersonIcon from \"../../assets/person.svg\";\nimport EmailIcon from \"../../assets/email.svg\";\nimport LockIcon from \"../../assets/lock.svg\";\nimport Icon from \"@expo/vector-icons/Feather\";\nvar dropDownOptions = [{\n  label: \"Cliente\",\n  value: \"U\",\n  icon: function icon() {\n    return React.createElement(Icon, {\n      name: \"user\",\n      size: 22,\n      color: DEFAULT_COLLOR_PALLET[0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    });\n  }\n}, {\n  label: \"Estabelecimento\",\n  value: \"E\",\n  icon: function icon() {\n    return React.createElement(Icon, {\n      name: \"shopping-cart\",\n      size: 22,\n      color: DEFAULT_COLLOR_PALLET[0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    });\n  }\n}];\nexport default (function () {\n  var _useContext = useContext(UserContext),\n      userDispatch = _useContext.dispatch;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageField = _useState2[0],\n      setImageField = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nameField = _useState4[0],\n      setNameField = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      emailField = _useState6[0],\n      setEmailField = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordField = _useState8[0],\n      setPasswordField = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      typeField = _useState10[0],\n      setTypeField = _useState10[1];\n\n  var _useState11 = useState({\n    isModalVisible: false,\n    errorMessage: \"\",\n    cb: setModalAttributes\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalAttributes = _useState12[0],\n      setModalAttributes = _useState12[1];\n\n  var handleSignClick = function handleSignClick() {\n    var email, objectImageData, filename, type, formData, json;\n    return _regeneratorRuntime.async(function handleSignClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(nameField != \"\" && emailField != \"\" && passwordField != \"\")) {\n              _context.next = 29;\n              break;\n            }\n\n            if (!(typeField == \"\")) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"Informe se Ã© cliente ou estabelecimento\");\n            _context.next = 27;\n            break;\n\n          case 6:\n            email = emailField.trim();\n\n            if (validateEmail(email)) {\n              _context.next = 10;\n              break;\n            }\n\n            alert(\"Verifique o formato do E-mail\");\n            return _context.abrupt(\"return\");\n\n          case 10:\n            objectImageData = Commons.getImageDataFromLocal(imageField);\n            filename = objectImageData.filename;\n            type = objectImageData.type;\n            formData = new FormData();\n            formData.append(\"image\", {\n              uri: imageField,\n              name: filename,\n              type: type\n            });\n            formData.append(\"name\", nameField);\n            formData.append(\"email\", email);\n            formData.append(\"password\", passwordField);\n            formData.append(\"type\", typeField);\n            _context.next = 21;\n            return _regeneratorRuntime.awrap(Api.submitMultipartWithFormData(\"users\", \"POST\", formData));\n\n          case 21:\n            json = _context.sent;\n\n            if (!json.token) {\n              _context.next = 27;\n              break;\n            }\n\n            _context.next = 25;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(TOKEN_KEY, json.token));\n\n          case 25:\n            userDispatch({\n              type: \"setUserContext\",\n              payload: {\n                avatar: json.avatar,\n                type: json.type\n              }\n            });\n            navigation.reset({\n              routes: [{\n                name: \"MainTab\"\n              }]\n            });\n\n          case 27:\n            _context.next = 30;\n            break;\n\n          case 29:\n            alert(\"por favor, preencha os campos para efetuar o cadastro\");\n\n          case 30:\n            _context.next = 35;\n            break;\n\n          case 32:\n            _context.prev = 32;\n            _context.t0 = _context[\"catch\"](0);\n            setModalAttributes({\n              isModalVisible: true,\n              errorMessage: GET_ERROR_MESSAGE(_context.t0),\n              cb: setModalAttributes\n            });\n\n          case 35:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 32]], Promise);\n  };\n\n  var handleMessageButtonClick = function handleMessageButtonClick() {\n    navigation.reset({\n      routes: [{\n        name: \"SignIn\"\n      }]\n    });\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, React.createElement(ModalErro, {\n    controlObject: modalAttributes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), React.createElement(BarberLogo, {\n    width: \"100%\",\n    height: \"140\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), React.createElement(ImageArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, React.createElement(ImagePickerComponent, {\n    fieldPlaceholder: \"Foto\",\n    imageField: imageField,\n    setimageField: setImageField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })), React.createElement(InputArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, React.createElement(InputComponent, {\n    IconSvg: PersonIcon,\n    placeholder: \"Digite seu nome\",\n    value: nameField,\n    onChangeText: function onChangeText(t) {\n      return setNameField(t);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), React.createElement(InputComponent, {\n    IconSvg: EmailIcon,\n    placeholder: \"Digite seu e-mail\",\n    value: emailField,\n    onChangeText: function onChangeText(t) {\n      return setEmailField(t);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), React.createElement(InputComponent, {\n    IconSvg: LockIcon,\n    placeholder: \"Digite sua senha\",\n    value: passwordField,\n    onChangeText: function onChangeText(t) {\n      return setPasswordField(t);\n    },\n    password: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), React.createElement(SignDropdown, {\n    options: dropDownOptions,\n    placeholder: \"Eu sou...\",\n    onChangeValue: setTypeField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), React.createElement(CustomButton, {\n    onPress: handleSignClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, React.createElement(CustomButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, \"CADASTRAR\"))), React.createElement(SignMessageButton, {\n    onPress: handleMessageButtonClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, React.createElement(SignMessageButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, \"J\\xE1 possui uma conta?\"), React.createElement(SignMessageButtonTextBold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"Fa\\xE7a Login\")));\n});","map":{"version":3,"sources":["C:/desenvolvimento/BarberSchedule/App/src/screens/SignUp/index.js"],"names":["React","useState","useContext","useNavigation","AsyncStorage","DEFAULT_COLLOR_PALLET","validateEmail","ImagePickerComponent","TOKEN_KEY","GET_ERROR_MESSAGE","UserContext","ModalErro","Container","InputArea","CustomButton","CustomButtonText","SignMessageButton","SignMessageButtonText","SignMessageButtonTextBold","ImageArea","InputComponent","SignDropdown","Api","Commons","BarberLogo","PersonIcon","EmailIcon","LockIcon","Icon","dropDownOptions","label","value","icon","userDispatch","dispatch","navigation","imageField","setImageField","nameField","setNameField","emailField","setEmailField","passwordField","setPasswordField","typeField","setTypeField","isModalVisible","errorMessage","cb","setModalAttributes","modalAttributes","handleSignClick","alert","email","trim","objectImageData","getImageDataFromLocal","filename","type","formData","FormData","append","uri","name","submitMultipartWithFormData","json","token","setItem","payload","avatar","reset","routes","handleMessageButtonClick","t"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport { DEFAULT_COLLOR_PALLET } from \"../ColorsPalette\";\r\nimport { validateEmail } from \"../../util/Validator\";\r\nimport ImagePickerComponent from \"../../components/ImagePickerComponent\";\r\nimport { TOKEN_KEY, GET_ERROR_MESSAGE } from \"../../util/Commons\";\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\nimport ModalErro from \"../../components/ModalErro\";\r\nimport {\r\n  Container,\r\n  InputArea,\r\n  CustomButton,\r\n  CustomButtonText,\r\n  SignMessageButton,\r\n  SignMessageButtonText,\r\n  SignMessageButtonTextBold,\r\n  ImageArea,\r\n} from \"./styles\";\r\n\r\nimport InputComponent from \"../../components/InputComponent\";\r\nimport SignDropdown from \"../../components/SignDropdown\";\r\n\r\nimport Api from \"../../Api\";\r\nimport Commons from \"../../util/Commons\";\r\n\r\nimport BarberLogo from \"../../assets/barber_2.svg\";\r\nimport PersonIcon from \"../../assets/person.svg\";\r\nimport EmailIcon from \"../../assets/email.svg\";\r\nimport LockIcon from \"../../assets/lock.svg\";\r\nimport Icon from \"react-native-vector-icons/Feather\";\r\n\r\nconst dropDownOptions = [\r\n  {\r\n    label: \"Cliente\",\r\n    value: \"U\",\r\n    icon: () => <Icon name=\"user\" size={22} color={DEFAULT_COLLOR_PALLET[0]} />,\r\n  },\r\n  {\r\n    label: \"Estabelecimento\",\r\n    value: \"E\",\r\n    icon: () => (\r\n      <Icon name=\"shopping-cart\" size={22} color={DEFAULT_COLLOR_PALLET[0]} />\r\n    ),\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const { dispatch: userDispatch } = useContext(UserContext);\r\n  const navigation = useNavigation();\r\n\r\n  const [imageField, setImageField] = useState(null);\r\n  const [nameField, setNameField] = useState(\"\");\r\n  const [emailField, setEmailField] = useState(\"\");\r\n  const [passwordField, setPasswordField] = useState(\"\");\r\n  const [typeField, setTypeField] = useState(\"\");\r\n  const [modalAttributes, setModalAttributes] = useState({\r\n    isModalVisible: false,\r\n    errorMessage: \"\",\r\n    cb: setModalAttributes,\r\n  });\r\n\r\n  const handleSignClick = async () => {\r\n    try {\r\n      if (nameField != \"\" && emailField != \"\" && passwordField != \"\") {\r\n        if (typeField == \"\") {\r\n          alert(\"Informe se Ã© cliente ou estabelecimento\");\r\n        } else {\r\n          const email = emailField.trim();\r\n          if (!validateEmail(email)) {\r\n            alert(\"Verifique o formato do E-mail\");\r\n            return;\r\n          }\r\n\r\n          let objectImageData = Commons.getImageDataFromLocal(imageField);\r\n          let filename = objectImageData.filename;\r\n          let type = objectImageData.type;\r\n\r\n          const formData = new FormData();\r\n          formData.append(\"image\", { uri: imageField, name: filename, type });\r\n          formData.append(\"name\", nameField);\r\n          formData.append(\"email\", email);\r\n          formData.append(\"password\", passwordField);\r\n          formData.append(\"type\", typeField);\r\n\r\n          let json = await Api.submitMultipartWithFormData(\r\n            \"users\",\r\n            \"POST\",\r\n            formData\r\n          );\r\n\r\n          if (json.token) {\r\n            await AsyncStorage.setItem(TOKEN_KEY, json.token);\r\n            userDispatch({\r\n              type: \"setUserContext\",\r\n              payload: {\r\n                avatar: json.avatar,\r\n                type: json.type,\r\n              },\r\n            });\r\n            navigation.reset({\r\n              routes: [{ name: \"MainTab\" }],\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        alert(\"por favor, preencha os campos para efetuar o cadastro\");\r\n      }\r\n    } catch (error) {\r\n      setModalAttributes({\r\n        isModalVisible: true,\r\n        errorMessage: GET_ERROR_MESSAGE(error),\r\n        cb: setModalAttributes,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMessageButtonClick = () => {\r\n    navigation.reset({\r\n      routes: [{ name: \"SignIn\" }],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ModalErro controlObject={modalAttributes} />\r\n      <BarberLogo width=\"100%\" height=\"140\" />\r\n\r\n      <ImageArea>\r\n        <ImagePickerComponent\r\n          fieldPlaceholder=\"Foto\"\r\n          imageField={imageField}\r\n          setimageField={setImageField}\r\n        />\r\n      </ImageArea>\r\n\r\n      <InputArea>\r\n        <InputComponent\r\n          IconSvg={PersonIcon}\r\n          placeholder=\"Digite seu nome\"\r\n          value={nameField}\r\n          onChangeText={(t) => setNameField(t)}\r\n        />\r\n\r\n        <InputComponent\r\n          IconSvg={EmailIcon}\r\n          placeholder=\"Digite seu e-mail\"\r\n          value={emailField}\r\n          onChangeText={(t) => setEmailField(t)}\r\n        />\r\n\r\n        <InputComponent\r\n          IconSvg={LockIcon}\r\n          placeholder=\"Digite sua senha\"\r\n          value={passwordField}\r\n          onChangeText={(t) => setPasswordField(t)}\r\n          password={true}\r\n        />\r\n\r\n        <SignDropdown\r\n          options={dropDownOptions}\r\n          placeholder=\"Eu sou...\"\r\n          onChangeValue={setTypeField}\r\n        />\r\n\r\n        <CustomButton onPress={handleSignClick}>\r\n          <CustomButtonText>CADASTRAR</CustomButtonText>\r\n        </CustomButton>\r\n      </InputArea>\r\n\r\n      <SignMessageButton onPress={handleMessageButtonClick}>\r\n        <SignMessageButtonText>JÃ¡ possui uma conta?</SignMessageButtonText>\r\n        <SignMessageButtonTextBold>FaÃ§a Login</SignMessageButtonTextBold>\r\n      </SignMessageButton>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}