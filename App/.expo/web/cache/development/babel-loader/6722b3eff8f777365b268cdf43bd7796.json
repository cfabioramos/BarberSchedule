{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _this = this,\n    _jsxFileName = \"C:\\\\desenvolvimento\\\\BarberSchedule\\\\App\\\\src\\\\components\\\\BarberItem.js\";\n\nimport React from \"react\";\nimport styled from \"styled-components/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Stars from \"../components/Stars\";\nvar Area = styled.TouchableOpacity(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  margin-bottom: 20px;\\n  border-radius: 20px;\\n  padding: 15px;\\n  flex-direction: row;\\n\"])), function (props) {\n  return props.color || \"#efc8ef\";\n});\nvar Avatar = styled.Image(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  width: 88px;\\n  height: 88px;\\n  border-radius: 20px;\\n\"])));\nvar InfoArea = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin-left: 20px;\\n  justify-content: space-between;\\n\\n\"])));\nvar UserName = styled.Text(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  font-size: 17px;\\n  font-weight: bold;\\n\"])));\nvar SeeProfileButton = styled.View(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  width: 85px;\\n  height: 26px;\\n  border: 1px solid #b641a9;\\n  border-radius: 10px;\\n  justify-content: center;\\n  margin-top: 20px\\n  align-items: center;\\n\"])));\nvar SeeProfileButtonText = styled.Text(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  font-size: 13px;\\n  color: #8b4488;\\n\"])));\nvar ShowDistance = styled.Text(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  font-size: 13px;\\n  font-weight: bold;\\n\"])));\nexport default (function (_ref) {\n  var data = _ref.data;\n  var navigation = useNavigation();\n  var distancia = data.distance;\n\n  var handleClick = function handleClick() {\n    navigation.navigate(\"BarberDetail\", {\n      id: data.id,\n      avatar: data.avatar,\n      name: data.name,\n      stars: data.stars,\n      distance: data.distance\n    });\n  };\n\n  return React.createElement(Area, {\n    onPress: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(Avatar, {\n    source: {\n      uri: data.avatar\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(InfoArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(UserName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, data.name), React.createElement(Stars, {\n    stars: data.stars,\n    showNumber: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), React.createElement(ShowDistance, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, Math.round(distancia * 100) / 100, \" km\"), React.createElement(SeeProfileButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(SeeProfileButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Ver Perfil\"))));\n});","map":{"version":3,"sources":["C:/desenvolvimento/BarberSchedule/App/src/components/BarberItem.js"],"names":["React","styled","useNavigation","Stars","Area","TouchableOpacity","props","color","Avatar","Image","InfoArea","View","UserName","Text","SeeProfileButton","SeeProfileButtonText","ShowDistance","data","navigation","distancia","distance","handleClick","navigate","id","avatar","name","stars","uri","Math","round"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,OAAOC,KAAP;AAEA,IAAMC,IAAI,GAAGH,MAAM,CAACI,gBAAV,kMACY,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,IAAe,SAA1B;AAAA,CADZ,CAAV;AAQA,IAAMC,MAAM,GAAGP,MAAM,CAACQ,KAAV,uIAAZ;AAMA,IAAMC,QAAQ,GAAGT,MAAM,CAACU,IAAV,yIAAd;AAMA,IAAMC,QAAQ,GAAGX,MAAM,CAACY,IAAV,wHAAd;AAKA,IAAMC,gBAAgB,GAAGb,MAAM,CAACU,IAAV,6OAAtB;AAUA,IAAMI,oBAAoB,GAAGd,MAAM,CAACY,IAAV,qHAA1B;AAIA,IAAMG,YAAY,GAAGf,MAAM,CAACY,IAAV,wHAAlB;AAKA,gBAAe,gBAAc;AAAA,MAAXI,IAAW,QAAXA,IAAW;AAC3B,MAAMC,UAAU,GAAGhB,aAAa,EAAhC;AACA,MAAIiB,SAAS,GAAGF,IAAI,CAACG,QAArB;;AAOA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBH,IAAAA,UAAU,CAACI,QAAX,CAAoB,cAApB,EAAoC;AAClCC,MAAAA,EAAE,EAAEN,IAAI,CAACM,EADyB;AAElCC,MAAAA,MAAM,EAAEP,IAAI,CAACO,MAFqB;AAGlCC,MAAAA,IAAI,EAAER,IAAI,CAACQ,IAHuB;AAIlCC,MAAAA,KAAK,EAAET,IAAI,CAACS,KAJsB;AAKlCN,MAAAA,QAAQ,EAAEH,IAAI,CAACG;AALmB,KAApC;AAOD,GARD;;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE;AAAEM,MAAAA,GAAG,EAAEV,IAAI,CAACO;AAAZ,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWP,IAAI,CAACQ,IAAhB,CADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAER,IAAI,CAACS,KAAnB;AAA0B,IAAA,UAAU,EAAE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeE,IAAI,CAACC,KAAL,CAAWV,SAAS,GAAG,GAAvB,IAA8B,GAA7C,QAHF,EAIE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAJF,CAFF,CADF;AAaD,CAhCD","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nimport Stars from \"../components/Stars\";\r\n\r\nconst Area = styled.TouchableOpacity`\r\n  background-color: ${(props) => props.color || \"#efc8ef\"};\r\n  margin-bottom: 20px;\r\n  border-radius: 20px;\r\n  padding: 15px;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Avatar = styled.Image`\r\n  width: 88px;\r\n  height: 88px;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst InfoArea = styled.View`\r\n  margin-left: 20px;\r\n  justify-content: space-between;\r\n\r\n`;\r\n\r\nconst UserName = styled.Text`\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst SeeProfileButton = styled.View`\r\n  width: 85px;\r\n  height: 26px;\r\n  border: 1px solid #b641a9;\r\n  border-radius: 10px;\r\n  justify-content: center;\r\n  margin-top: 20px\r\n  align-items: center;\r\n`;\r\n\r\nconst SeeProfileButtonText = styled.Text`\r\n  font-size: 13px;\r\n  color: #8b4488;\r\n`;\r\nconst ShowDistance = styled.Text`\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default ({ data }) => {\r\n  const navigation = useNavigation();\r\n  let distancia = data.distance;\r\n\r\n  /*if (data.distance < 1) {\r\n    distancia = parseInt(data.distance);\r\n  } */\r\n  \r\n\r\n  const handleClick = () => {\r\n    navigation.navigate(\"BarberDetail\", {\r\n      id: data.id,\r\n      avatar: data.avatar,\r\n      name: data.name,\r\n      stars: data.stars,\r\n      distance: data.distance,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Area onPress={handleClick}>\r\n      <Avatar source={{ uri: data.avatar }} />\r\n      <InfoArea>\r\n        <UserName>{data.name}</UserName>\r\n        <Stars stars={data.stars} showNumber={true} />\r\n        <ShowDistance>{Math.round(distancia * 100) / 100} km</ShowDistance>\r\n        <SeeProfileButton>\r\n          <SeeProfileButtonText>Ver Perfil</SeeProfileButtonText>\r\n        </SeeProfileButton>\r\n      </InfoArea>\r\n    </Area>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}