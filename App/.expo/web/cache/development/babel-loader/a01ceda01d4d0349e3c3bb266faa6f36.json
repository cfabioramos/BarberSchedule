{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\desenvolvimento\\\\BarberSchedule\\\\App\\\\src\\\\screens\\\\SignIn\\\\index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { validateEmail } from \"../../util/Validator\";\nimport { TOKEN_KEY, GET_ERROR_MESSAGE } from \"../../util/Commons\";\nimport ModalErro from \"../../components/ModalErro\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { Container, InputArea, CustomButton, CustomButtonText, LoadingIcon, SignMessageButton, SignMessageButtonText, SignMessageButtonTextBold } from \"./styles\";\nimport Api from \"../../Api\";\nimport InputComponent from \"../../components/InputComponent\";\nimport BarberLogo from \"../../assets/barber_2.svg\";\nimport EmailIcon from \"../../assets/email.svg\";\nimport LockIcon from \"../../assets/lock.svg\";\nexport default (function () {\n  var _useContext = useContext(UserContext),\n      userDispatch = _useContext.dispatch;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailField = _useState4[0],\n      setEmailField = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordField = _useState6[0],\n      setPasswordField = _useState6[1];\n\n  var _useState7 = useState({\n    isModalVisible: false,\n    errorMessage: \"\",\n    cb: setModalAttributes\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalAttributes = _useState8[0],\n      setModalAttributes = _useState8[1];\n\n  var handleSignClick = function handleSignClick() {\n    var email, json;\n    return _regeneratorRuntime.async(function handleSignClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.prev = 1;\n\n            if (!(emailField != \"\" && passwordField != \"\")) {\n              _context.next = 18;\n              break;\n            }\n\n            email = emailField.trim();\n\n            if (validateEmail(email)) {\n              _context.next = 7;\n              break;\n            }\n\n            alert(\"Verifique o formato do E-mail\");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(Api.signIn(email, passwordField));\n\n          case 9:\n            json = _context.sent;\n\n            if (!(json && json.token)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(TOKEN_KEY, json.token));\n\n          case 13:\n            userDispatch({\n              type: \"setUserContext\",\n              payload: {\n                id: json.id_user,\n                avatar: json.avatar,\n                type: json.type\n              }\n            });\n            navigation.reset({\n              routes: [{\n                name: \"MainTab\"\n              }]\n            });\n\n          case 15:\n            setLoading(false);\n            _context.next = 19;\n            break;\n\n          case 18:\n            alert(\"preencha os campos\");\n\n          case 19:\n            _context.next = 25;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](1);\n            setLoading(false);\n            setModalAttributes({\n              isModalVisible: true,\n              errorMessage: GET_ERROR_MESSAGE(_context.t0),\n              cb: setModalAttributes\n            });\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 21]], Promise);\n  };\n\n  var handleMessageButtonClick = function handleMessageButtonClick() {\n    navigation.reset({\n      routes: [{\n        name: \"SignUp\"\n      }]\n    });\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(ModalErro, {\n    controlObject: modalAttributes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), React.createElement(BarberLogo, {\n    width: \"100%\",\n    height: \"23%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), loading && React.createElement(LoadingIcon, {\n    size: \"large\",\n    color: \"#FFFFFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }), React.createElement(InputArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(InputComponent, {\n    IconSvg: EmailIcon,\n    placeholder: \"Digite seu e-mail\",\n    value: emailField,\n    onChangeText: function onChangeText(t) {\n      return setEmailField(t);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(InputComponent, {\n    IconSvg: LockIcon,\n    placeholder: \"Digite sua senha\",\n    value: passwordField,\n    onChangeText: function onChangeText(t) {\n      return setPasswordField(t);\n    },\n    password: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(CustomButton, {\n    onPress: handleSignClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(CustomButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"LOGIN\"))), React.createElement(SignMessageButton, {\n    onPress: handleMessageButtonClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, React.createElement(SignMessageButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Ainda n\\xE3o possui uma conta?\"), React.createElement(SignMessageButtonTextBold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Cadastre-se\")));\n});","map":{"version":3,"sources":["C:/desenvolvimento/BarberSchedule/App/src/screens/SignIn/index.js"],"names":["React","useState","useContext","useNavigation","AsyncStorage","validateEmail","TOKEN_KEY","GET_ERROR_MESSAGE","ModalErro","UserContext","Container","InputArea","CustomButton","CustomButtonText","LoadingIcon","SignMessageButton","SignMessageButtonText","SignMessageButtonTextBold","Api","InputComponent","BarberLogo","EmailIcon","LockIcon","userDispatch","dispatch","navigation","loading","setLoading","emailField","setEmailField","passwordField","setPasswordField","isModalVisible","errorMessage","cb","setModalAttributes","modalAttributes","handleSignClick","email","trim","alert","signIn","json","token","setItem","type","payload","id","id_user","avatar","reset","routes","name","handleMessageButtonClick","t"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,aAAT;AACA,SAASC,SAAT,EAAoBC,iBAApB;AACA,OAAOC,SAAP;AAEA,SAASC,WAAT;AAEA,SACEC,SADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,gBAJF,EAKEC,WALF,EAMEC,iBANF,EAOEC,qBAPF,EAQEC,yBARF;AAWA,OAAOC,GAAP;AAEA,OAAOC,cAAP;AAEA,OAAOC,UAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AAEA,gBAAe,YAAM;AACnB,oBAAmCpB,UAAU,CAACO,WAAD,CAA7C;AAAA,MAAkBc,YAAlB,eAAQC,QAAR;;AACA,MAAMC,UAAU,GAAGtB,aAAa,EAAhC;;AACA,kBAA8BF,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOyB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAoC1B,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAO2B,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA0C5B,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAO6B,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA8C9B,QAAQ,CAAC;AACrD+B,IAAAA,cAAc,EAAE,KADqC;AAErDC,IAAAA,YAAY,EAAE,EAFuC;AAGrDC,IAAAA,EAAE,EAAEC;AAHiD,GAAD,CAAtD;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBD,kBAAxB;;AAMA,MAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBV,YAAAA,UAAU,CAAC,IAAD,CAAV;AADsB;;AAAA,kBAGhBC,UAAU,IAAI,EAAd,IAAoBE,aAAa,IAAI,EAHrB;AAAA;AAAA;AAAA;;AAIZQ,YAAAA,KAJY,GAIJV,UAAU,CAACW,IAAX,EAJI;;AAAA,gBAKblC,aAAa,CAACiC,KAAD,CALA;AAAA;AAAA;AAAA;;AAMhBE,YAAAA,KAAK,CAAC,+BAAD,CAAL;AANgB;;AAAA;AAAA;AAAA,6CAUDtB,GAAG,CAACuB,MAAJ,CAAWH,KAAX,EAAkBR,aAAlB,CAVC;;AAAA;AAUdY,YAAAA,IAVc;;AAAA,kBAYdA,IAAI,IAAIA,IAAI,CAACC,KAZC;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAaVvC,YAAY,CAACwC,OAAb,CAAqBtC,SAArB,EAAgCoC,IAAI,CAACC,KAArC,CAbU;;AAAA;AAchBpB,YAAAA,YAAY,CAAC;AACXsB,cAAAA,IAAI,EAAE,gBADK;AAEXC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,EAAE,EAAEL,IAAI,CAACM,OADF;AAEPC,gBAAAA,MAAM,EAAEP,IAAI,CAACO,MAFN;AAGPJ,gBAAAA,IAAI,EAAEH,IAAI,CAACG;AAHJ;AAFE,aAAD,CAAZ;AASApB,YAAAA,UAAU,CAACyB,KAAX,CAAiB;AACfC,cAAAA,MAAM,EAAE,CAAC;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAD;AADO,aAAjB;;AAvBgB;AA2BlBzB,YAAAA,UAAU,CAAC,KAAD,CAAV;AA3BkB;AAAA;;AAAA;AA6BlBa,YAAAA,KAAK,CAAC,oBAAD,CAAL;;AA7BkB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgCpBb,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,YAAAA,kBAAkB,CAAC;AACjBH,cAAAA,cAAc,EAAE,IADC;AAEjBC,cAAAA,YAAY,EAAE1B,iBAAiB,aAFd;AAGjB2B,cAAAA,EAAE,EAAEC;AAHa,aAAD,CAAlB;;AAjCoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAyCA,MAAMkB,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC5B,IAAAA,UAAU,CAACyB,KAAX,CAAiB;AACfC,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD;AADO,KAAjB;AAGD,GAJD;;AAMA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,aAAa,EAAEhB,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,MAAM,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGV,OAAO,IAAI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAA0B,IAAA,KAAK,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHd,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAEL,SADX;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,KAAK,EAAEO,UAHT;AAIE,IAAA,YAAY,EAAE,sBAAC0B,CAAD;AAAA,aAAOzB,aAAa,CAACyB,CAAD,CAApB;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAEhC,QADX;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,KAAK,EAAEQ,aAHT;AAIE,IAAA,YAAY,EAAE,sBAACwB,CAAD;AAAA,aAAOvB,gBAAgB,CAACuB,CAAD,CAAvB;AAAA,KAJhB;AAKE,IAAA,QAAQ,EAAE,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAgBE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEjB,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAhBF,CAJF,EAyBE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEgB,wBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAIE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CAzBF,CADF;AAkCD,CA7FD","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport { validateEmail } from \"../../util/Validator\";\r\nimport { TOKEN_KEY, GET_ERROR_MESSAGE } from \"../../util/Commons\";\r\nimport ModalErro from \"../../components/ModalErro\";\r\n\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\n\r\nimport {\r\n  Container,\r\n  InputArea,\r\n  CustomButton,\r\n  CustomButtonText,\r\n  LoadingIcon,\r\n  SignMessageButton,\r\n  SignMessageButtonText,\r\n  SignMessageButtonTextBold,\r\n} from \"./styles\";\r\n\r\nimport Api from \"../../Api\";\r\n\r\nimport InputComponent from \"../../components/InputComponent\";\r\n\r\nimport BarberLogo from \"../../assets/barber_2.svg\";\r\nimport EmailIcon from \"../../assets/email.svg\";\r\nimport LockIcon from \"../../assets/lock.svg\";\r\n\r\nexport default () => {\r\n  const { dispatch: userDispatch } = useContext(UserContext);\r\n  const navigation = useNavigation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [emailField, setEmailField] = useState(\"\");\r\n  const [passwordField, setPasswordField] = useState(\"\");\r\n  const [modalAttributes, setModalAttributes] = useState({\r\n    isModalVisible: false,\r\n    errorMessage: \"\",\r\n    cb: setModalAttributes,\r\n  });\r\n\r\n  const handleSignClick = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (emailField != \"\" && passwordField != \"\") {\r\n        const email = emailField.trim();\r\n        if (!validateEmail(email)) {\r\n          alert(\"Verifique o formato do E-mail\");\r\n          return;\r\n        }\r\n\r\n        let json = await Api.signIn(email, passwordField);\r\n        // let json = await Api.checkToken('eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvYXBpLmI3d2ViLmNvbS5iclwvZGV2YmFyYmVyXC9hcGlcL2F1dGhcL2xvZ2luIiwiaWF0IjoxNjAxNzc4MzM0LCJleHAiOjE2MDE3ODE5MzQsIm5iZiI6MTYwMTc3ODMzNCwianRpIjoiRGFGZG1QcDJVYnpxWWxoVCIsInN1YiI6NCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CqXZ6Z22PC87mTABD1htMgGLfc8MKdAqIZ4eQ3TdWo8')\r\n        if (json && json.token) {\r\n          await AsyncStorage.setItem(TOKEN_KEY, json.token);\r\n          userDispatch({\r\n            type: \"setUserContext\",\r\n            payload: {\r\n              id: json.id_user,\r\n              avatar: json.avatar,\r\n              type: json.type,\r\n            },\r\n          });\r\n\r\n          navigation.reset({\r\n            routes: [{ name: \"MainTab\" }],\r\n          });\r\n        }\r\n        setLoading(false);\r\n      } else {\r\n        alert(\"preencha os campos\");\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setModalAttributes({\r\n        isModalVisible: true,\r\n        errorMessage: GET_ERROR_MESSAGE(error),\r\n        cb: setModalAttributes,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMessageButtonClick = () => {\r\n    navigation.reset({\r\n      routes: [{ name: \"SignUp\" }],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ModalErro controlObject={modalAttributes} />\r\n      <BarberLogo width=\"100%\" height=\"23%\" />\r\n      {loading && <LoadingIcon size=\"large\" color=\"#FFFFFF\" />}\r\n      <InputArea>\r\n        <InputComponent\r\n          IconSvg={EmailIcon}\r\n          placeholder=\"Digite seu e-mail\"\r\n          value={emailField}\r\n          onChangeText={(t) => setEmailField(t)}\r\n        />\r\n\r\n        <InputComponent\r\n          IconSvg={LockIcon}\r\n          placeholder=\"Digite sua senha\"\r\n          value={passwordField}\r\n          onChangeText={(t) => setPasswordField(t)}\r\n          password={true}\r\n        />\r\n\r\n        <CustomButton onPress={handleSignClick}>\r\n          <CustomButtonText>LOGIN</CustomButtonText>\r\n        </CustomButton>\r\n      </InputArea>\r\n\r\n      <SignMessageButton onPress={handleMessageButtonClick}>\r\n        <SignMessageButtonText>\r\n          Ainda não possui uma conta?\r\n        </SignMessageButtonText>\r\n        <SignMessageButtonTextBold>Cadastre-se</SignMessageButtonTextBold>\r\n      </SignMessageButton>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}