{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\desenvolvimento\\\\BarberSchedule\\\\App\\\\src\\\\screens\\\\Barber\\\\index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport Swiper from \"react-native-swiper\";\nimport Stars from \"../../components/Stars\";\nimport BarberModal from \"../../components/BarberModal\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport FavoriteFullIcon from \"../../assets/favorite_full.svg\";\nimport FavoriteIcon from \"../../assets/favorite.svg\";\nimport BackIcon from \"../../assets/back.svg\";\nimport NavPrevIcon from \"../../assets/nav_prev.svg\";\nimport NavNextIcon from \"../../assets/nav_next.svg\";\nimport { JsonBarberId } from \"../../Json\";\nimport { Container, Scroller, FakeSwiper, PageBody, UserInfoArea, UserAvatar, UserInfo, UserInfoName, UserFavButton, ServiceArea, ServiceTitle, ServiceItem, ServiceInfo, ServiceName, ServicePrice, ServiceChooseButton, ServiceChooseBtnText, TestimonialArea, TestimonialItem, TestimonialInfo, TestimonialName, TestimonialBody, SwipeDot, SwipeDotActive, SwipeItem, SwipeImage, BackButton, LoadingIcon } from \"./styles\";\nimport Api from \"../../Api\";\nexport default (function () {\n  var navigation = useNavigation();\n  var route = useRoute();\n\n  var _useState = useState({\n    id: route.params.id,\n    avatar: route.params.avatar,\n    name: route.params.name,\n    stars: route.params.stars,\n    services: JsonBarberId.data.services,\n    photos: JsonBarberId.data.photos,\n    testimonials: JsonBarberId.data.testimonials\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.state;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      favorited = _useState6[0],\n      setFavorited = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedService = _useState8[0],\n      setSelectedService = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showModal = _useState10[0],\n      setShowModal = _useState10[1];\n\n  useEffect(function () {\n    var getBarberInfo = function getBarberInfo() {\n      var json;\n      return _regeneratorRuntime.async(function getBarberInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Api.getBarber(userInfo.id));\n\n            case 4:\n              json = _context.sent;\n              setFavorited(json.isFavorite);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              alert(\"Erro: \" + _context.t0);\n\n            case 11:\n              setLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    };\n\n    getBarberInfo();\n  }, []);\n\n  var handleBackButton = function handleBackButton() {\n    navigation.goBack();\n  };\n\n  var handleFavClick = function handleFavClick() {\n    var favoriteRep;\n    return _regeneratorRuntime.async(function handleFavClick$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (favorited) {\n              _context2.next = 13;\n              break;\n            }\n\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(Api.setFavoriteBarber(user.id, userInfo.id));\n\n          case 4:\n            favoriteRep = _context2.sent;\n\n            if (favoriteRep.idUserFavorite) {\n              setFavorited(true);\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            alert(\"Erro: \" + _context2.t0);\n\n          case 11:\n            _context2.next = 22;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.next = 16;\n            return _regeneratorRuntime.awrap(Api.deleteFavoriteBarber(user.id, userInfo.id));\n\n          case 16:\n            setFavorited(false);\n            _context2.next = 22;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t1 = _context2[\"catch\"](13);\n            alert(\"Erro: \" + _context2.t1);\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 8], [13, 19]], Promise);\n  };\n\n  var handleServiceChoose = function handleServiceChoose(key) {\n    setSelectedService(key);\n    setShowModal(true);\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, React.createElement(Scroller, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, userInfo.photos && userInfo.photos.length > 0 ? React.createElement(Swiper, {\n    style: {\n      height: 240\n    },\n    dot: React.createElement(SwipeDot, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 18\n      }\n    }),\n    activeDot: React.createElement(SwipeDotActive, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 24\n      }\n    }),\n    paginationStyle: {\n      top: 25,\n      right: 15,\n      bottom: null,\n      left: null\n    },\n    autoplay: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, userInfo.photos.map(function (item, key) {\n    return React.createElement(SwipeItem, {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, React.createElement(SwipeImage, {\n      source: {\n        uri: item.url\n      },\n      resizeMode: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }));\n  })) : React.createElement(FakeSwiper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), React.createElement(PageBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, React.createElement(UserInfoArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, React.createElement(UserAvatar, {\n    source: {\n      uri: userInfo.avatar\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), React.createElement(UserInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, React.createElement(UserInfoName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, userInfo.name), React.createElement(Stars, {\n    stars: userInfo.stars,\n    showNumber: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  })), React.createElement(UserFavButton, {\n    onPress: handleFavClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, favorited ? React.createElement(FavoriteFullIcon, {\n    width: \"24\",\n    height: \"24\",\n    fill: \"#FF0000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }) : React.createElement(FavoriteIcon, {\n    width: \"24\",\n    height: \"24\",\n    fill: \"#FF0000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }))), loading && React.createElement(LoadingIcon, {\n    size: \"large\",\n    color: \"#000000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  }), userInfo.services && userInfo.services.length > 0 && React.createElement(ServiceArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, React.createElement(ServiceTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Lista de servi\\xE7os\"), userInfo.services.map(function (item, key) {\n    return React.createElement(ServiceItem, {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, React.createElement(ServiceInfo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, React.createElement(ServiceName, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, item.name), React.createElement(ServicePrice, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, \"R$ \", item.price.toFixed(2))), React.createElement(ServiceChooseButton, {\n      onPress: function onPress() {\n        return handleServiceChoose(key);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, React.createElement(ServiceChooseBtnText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Agendar\")));\n  })), userInfo.services && userInfo.services.length > 0 && React.createElement(BarberModal, {\n    show: showModal,\n    setShow: setShowModal,\n    data: userInfo,\n    service: selectedService,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), userInfo.testimonials && userInfo.testimonials.length > 0 && React.createElement(TestimonialArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, React.createElement(Swiper, {\n    style: {\n      height: 110\n    },\n    showsPagination: false,\n    showsButtons: true,\n    prevButton: React.createElement(NavPrevIcon, {\n      width: \"35\",\n      height: \"35\",\n      fill: \"#000000\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }),\n    nextButton: React.createElement(NavNextIcon, {\n      width: \"35\",\n      height: \"35\",\n      fill: \"#000000\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, userInfo.testimonials.map(function (item, key) {\n    return React.createElement(TestimonialItem, {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, React.createElement(TestimonialInfo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, React.createElement(TestimonialName, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, item.name), React.createElement(Stars, {\n      stars: item.rate,\n      showNumber: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    })), React.createElement(TestimonialBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, item.body));\n  }))))), React.createElement(BackButton, {\n    onPress: handleBackButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, React.createElement(BackIcon, {\n    width: \"44\",\n    height: \"44\",\n    fill: \"#FFFFFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["C:/desenvolvimento/BarberSchedule/App/src/screens/Barber/index.js"],"names":["React","useState","useEffect","useContext","useNavigation","useRoute","Swiper","Stars","BarberModal","UserContext","FavoriteFullIcon","FavoriteIcon","BackIcon","NavPrevIcon","NavNextIcon","JsonBarberId","Container","Scroller","FakeSwiper","PageBody","UserInfoArea","UserAvatar","UserInfo","UserInfoName","UserFavButton","ServiceArea","ServiceTitle","ServiceItem","ServiceInfo","ServiceName","ServicePrice","ServiceChooseButton","ServiceChooseBtnText","TestimonialArea","TestimonialItem","TestimonialInfo","TestimonialName","TestimonialBody","SwipeDot","SwipeDotActive","SwipeItem","SwipeImage","BackButton","LoadingIcon","Api","navigation","route","id","params","avatar","name","stars","services","data","photos","testimonials","userInfo","setUserInfo","user","state","loading","setLoading","favorited","setFavorited","selectedService","setSelectedService","showModal","setShowModal","getBarberInfo","getBarber","json","isFavorite","alert","handleBackButton","goBack","handleFavClick","setFavoriteBarber","favoriteRep","idUserFavorite","deleteFavoriteBarber","handleServiceChoose","key","length","height","top","right","bottom","left","map","item","uri","url","price","toFixed","rate","body"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useContext } from \"react\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport Swiper from \"react-native-swiper\";\r\nimport Stars from \"../../components/Stars\";\r\nimport BarberModal from \"../../components/BarberModal\";\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\n\r\nimport FavoriteFullIcon from \"../../assets/favorite_full.svg\";\r\nimport FavoriteIcon from \"../../assets/favorite.svg\";\r\nimport BackIcon from \"../../assets/back.svg\";\r\nimport NavPrevIcon from \"../../assets/nav_prev.svg\";\r\nimport NavNextIcon from \"../../assets/nav_next.svg\";\r\n\r\nimport { JsonBarberId } from \"../../Json\";\r\n\r\nimport {\r\n  Container,\r\n  Scroller,\r\n  FakeSwiper,\r\n  PageBody,\r\n  UserInfoArea,\r\n  UserAvatar,\r\n  UserInfo,\r\n  UserInfoName,\r\n  UserFavButton,\r\n  ServiceArea,\r\n  ServiceTitle,\r\n  ServiceItem,\r\n  ServiceInfo,\r\n  ServiceName,\r\n  ServicePrice,\r\n  ServiceChooseButton,\r\n  ServiceChooseBtnText,\r\n  TestimonialArea,\r\n  TestimonialItem,\r\n  TestimonialInfo,\r\n  TestimonialName,\r\n  TestimonialBody,\r\n  SwipeDot,\r\n  SwipeDotActive,\r\n  SwipeItem,\r\n  SwipeImage,\r\n  BackButton,\r\n  LoadingIcon,\r\n} from \"./styles\";\r\n\r\nimport Api from \"../../Api\";\r\n\r\nexport default () => {\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    id: route.params.id,\r\n    avatar: route.params.avatar,\r\n    name: route.params.name,\r\n    stars: route.params.stars,\r\n    services: JsonBarberId.data.services,\r\n    photos : JsonBarberId.data.photos,\r\n    testimonials : JsonBarberId.data.testimonials,\r\n\r\n  });\r\n  const { state: user } = useContext(UserContext);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [favorited, setFavorited] = useState(false);\r\n  const [selectedService, setSelectedService] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getBarberInfo = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let json = await Api.getBarber(userInfo.id);\r\n        //setUserInfo(json);\r\n        setFavorited(json.isFavorite);\r\n      } catch (error) {\r\n        alert(\"Erro: \" + error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    getBarberInfo();\r\n  }, []);\r\n\r\n  const handleBackButton = () => {\r\n    navigation.goBack();\r\n    \r\n  };\r\n\r\n  const handleFavClick = async () => {\r\n    if (!favorited) {\r\n      try {\r\n        const favoriteRep = await Api.setFavoriteBarber(user.id, userInfo.id);\r\n        if (favoriteRep.idUserFavorite) {\r\n          setFavorited(true);\r\n        }\r\n      } catch (error) {\r\n        alert(\"Erro: \" + error);\r\n      }\r\n    } else {\r\n      try {\r\n        await Api.deleteFavoriteBarber(user.id, userInfo.id);\r\n        setFavorited(false);\r\n\r\n      } catch (error) {\r\n        alert(\"Erro: \" + error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleServiceChoose = (key) => {\r\n    setSelectedService(key);\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Scroller>\r\n        {userInfo.photos && userInfo.photos.length > 0 ? (\r\n          <Swiper\r\n            style={{ height: 240 }}\r\n            dot={<SwipeDot />}\r\n            activeDot={<SwipeDotActive />}\r\n            paginationStyle={{ top: 25, right: 15, bottom: null, left: null }}\r\n            autoplay={true}\r\n          >\r\n            {userInfo.photos.map((item, key) => (\r\n              <SwipeItem key={key}>\r\n                <SwipeImage source={{ uri: item.url }} resizeMode=\"cover\" />\r\n              </SwipeItem>\r\n            ))}\r\n          </Swiper>\r\n        ) : (\r\n          <FakeSwiper></FakeSwiper>\r\n        )}\r\n        <PageBody>\r\n          <UserInfoArea>\r\n            <UserAvatar source={{ uri: userInfo.avatar }} />\r\n            <UserInfo>\r\n              <UserInfoName>{userInfo.name}</UserInfoName>\r\n              <Stars stars={userInfo.stars} showNumber={true} />\r\n            </UserInfo>\r\n            <UserFavButton onPress={handleFavClick}>\r\n              {favorited ? (\r\n                <FavoriteFullIcon width=\"24\" height=\"24\" fill=\"#FF0000\" />\r\n              ) : (\r\n                <FavoriteIcon width=\"24\" height=\"24\" fill=\"#FF0000\" />\r\n              )}\r\n            </UserFavButton>\r\n          </UserInfoArea>\r\n\r\n          {loading && <LoadingIcon size=\"large\" color=\"#000000\" />}\r\n\r\n          {userInfo.services && userInfo.services.length > 0 && (\r\n            <ServiceArea>\r\n              <ServiceTitle>Lista de serviços</ServiceTitle>\r\n              {userInfo.services.map((item, key) => (\r\n                <ServiceItem key={key}>\r\n                  <ServiceInfo>\r\n                    <ServiceName>{item.name}</ServiceName>\r\n                    <ServicePrice>R$ {item.price.toFixed(2)}</ServicePrice>\r\n                  </ServiceInfo>\r\n                  <ServiceChooseButton onPress={() => handleServiceChoose(key)}>\r\n                    <ServiceChooseBtnText>Agendar</ServiceChooseBtnText>\r\n                  </ServiceChooseButton>\r\n                </ServiceItem>\r\n              ))}\r\n            </ServiceArea>\r\n          )}\r\n          {userInfo.services && userInfo.services.length > 0 && (\r\n            <BarberModal\r\n              show={showModal}\r\n              setShow={setShowModal}\r\n              data={userInfo}\r\n              service={selectedService}\r\n            />\r\n          )}\r\n\r\n          {userInfo.testimonials && userInfo.testimonials.length > 0 && (\r\n            <TestimonialArea>\r\n              <Swiper\r\n                style={{ height: 110 }}\r\n                showsPagination={false}\r\n                showsButtons={true}\r\n                prevButton={\r\n                  <NavPrevIcon width=\"35\" height=\"35\" fill=\"#000000\" />\r\n                }\r\n                nextButton={\r\n                  <NavNextIcon width=\"35\" height=\"35\" fill=\"#000000\" />\r\n                }\r\n              >\r\n                {userInfo.testimonials.map((item, key) => (\r\n                  <TestimonialItem key={key}>\r\n                    <TestimonialInfo>\r\n                      <TestimonialName>{item.name}</TestimonialName>\r\n                      <Stars stars={item.rate} showNumber={false} />\r\n                    </TestimonialInfo>\r\n                    <TestimonialBody>{item.body}</TestimonialBody>\r\n                  </TestimonialItem>\r\n                ))}\r\n              </Swiper>\r\n            </TestimonialArea>\r\n          )}\r\n        </PageBody>\r\n      </Scroller>\r\n      <BackButton onPress={handleBackButton}>\r\n        <BackIcon width=\"44\" height=\"44\" fill=\"#FFFFFF\" />\r\n      </BackButton>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}