{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _templateObject8,\n    _templateObject9,\n    _templateObject10,\n    _templateObject11,\n    _templateObject12,\n    _templateObject13,\n    _templateObject14,\n    _templateObject15,\n    _templateObject16,\n    _templateObject17,\n    _templateObject18,\n    _templateObject19,\n    _templateObject20,\n    _templateObject21,\n    _templateObject22,\n    _templateObject23,\n    _templateObject24,\n    _templateObject25,\n    _this = this,\n    _jsxFileName = \"C:\\\\desenvolvimento\\\\BarberSchedule\\\\App\\\\src\\\\components\\\\BarberModal.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Api from \"../Api\";\nimport ExpandIcon from \"../assets/expand.svg\";\nimport NavPrevIcon from \"../assets/nav_prev.svg\";\nimport NavNextIcon from \"../assets/nav_next.svg\";\nvar Modal = styled.Modal(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\"])));\nvar ModalArea = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  justify-content: flex-end;\\n\"])));\nvar ModalBody = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  background-color: #d6b2ce;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  min-height: 300px;\\n  padding: 10px 20px 40px 20px;\\n\"])));\nvar ModalItem = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  background-color: #ffffff;\\n  border-radius: 10px;\\n  margin-bottom: 15px;\\n  padding: 10px;\\n\"])));\nvar UserInfo = styled.View(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  align-items: center;\\n\"])));\nvar UserAvatar = styled.Image(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  width: 56px;\\n  height: 56px;\\n  border-radius: 10px;\\n  margin-right: 15px;\\n\"])));\nvar UserName = styled.Text(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  color: #000000;\\n  font-size: 18px;\\n  font-weight: bold;\\n\"])));\nvar CloseButton = styled.TouchableOpacity(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  width: 40px;\\n  height: 40px;\\n\"])));\nvar ServiceInfo = styled.View(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"])));\nvar ServiceName = styled.Text(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));\nvar ServicePrice = styled.Text(_templateObject11 || (_templateObject11 = _taggedTemplateLiteralLoose([\"\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));\nvar FinishButton = styled.TouchableOpacity(_templateObject12 || (_templateObject12 = _taggedTemplateLiteralLoose([\"\\n  background-color: #8b4488;\\n  height: 60px;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 20px;\\n\"])));\nvar FinishButtonText = styled.Text(_templateObject13 || (_templateObject13 = _taggedTemplateLiteralLoose([\"\\n  color: #ffffff;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));\nvar DateInfo = styled.View(_templateObject14 || (_templateObject14 = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n\"])));\nvar DatePrevArea = styled.TouchableOpacity(_templateObject15 || (_templateObject15 = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  align-items: flex-end;\\n\"])));\nvar DateNextArea = styled.TouchableOpacity(_templateObject16 || (_templateObject16 = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  align-items: flex-start;\\n\"])));\nvar DateTitleArea = styled.Text(_templateObject17 || (_templateObject17 = _taggedTemplateLiteralLoose([\"\\n  width: 140px;\\n\"])));\nvar DateTitle = styled.Text(_templateObject18 || (_templateObject18 = _taggedTemplateLiteralLoose([\"\\n  font-size: 17px;\\n  font-weight: bold;\\n  color: #000000;\\n\"])));\nvar DateList = styled.ScrollView(_templateObject19 || (_templateObject19 = _taggedTemplateLiteralLoose([\"\"])));\nvar DateItem = styled.TouchableOpacity(_templateObject20 || (_templateObject20 = _taggedTemplateLiteralLoose([\"\\n  width: 45px;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 10px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n\"])));\nvar DateItemWeekDay = styled.Text(_templateObject21 || (_templateObject21 = _taggedTemplateLiteralLoose([\"\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));\nvar DateItemWeekNumber = styled.Text(_templateObject22 || (_templateObject22 = _taggedTemplateLiteralLoose([\"\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));\nvar TimeList = styled.ScrollView(_templateObject23 || (_templateObject23 = _taggedTemplateLiteralLoose([\"\"])));\nvar TimeItem = styled.TouchableOpacity(_templateObject24 || (_templateObject24 = _taggedTemplateLiteralLoose([\"\\n  width: 75px;\\n  height: 40px;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 10px;\\n\"])));\nvar TimeItemText = styled.Text(_templateObject25 || (_templateObject25 = _taggedTemplateLiteralLoose([\"\\n  font-size: 16px;\\n\"])));\nvar months = [\"Janeiro\", \"Fevereiro\", \"Mar√ßo\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"];\nvar days = [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sab\"];\nexport default (function (_ref) {\n  var show = _ref.show,\n      setShow = _ref.setShow,\n      data = _ref.data,\n      service = _ref.service;\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listDays = _useState2[0],\n      setListDays = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listHours = _useState4[0],\n      setListHours = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedYear = _useState6[0],\n      setSelectedYear = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedMonth = _useState8[0],\n      setSelectedMonth = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedDay = _useState10[0],\n      setSelectedDay = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedHour = _useState12[0],\n      setSelectedHour = _useState12[1];\n\n  useEffect(function () {\n    if (data.available) {\n      var daysInMonth = new Date(selectedYear, selectedMonth + 1, 0).getDate();\n      var newListDays = [];\n\n      var _loop = function _loop(i) {\n        var d = new Date(selectedYear, selectedMonth, i);\n        var year = d.getFullYear();\n        var month = d.getMonth() + 1;\n        var day = d.getDate();\n        month = month < 10 ? \"0\" + month : month;\n        day = day < 10 ? \"0\" + day : day;\n        var selDate = year + \"-\" + month + \"-\" + day;\n        var availability = data.available.filter(function (e) {\n          return e.date === selDate;\n        });\n        newListDays.push({\n          status: availability.length > 0 ? true : false,\n          weekday: days[d.getDay()],\n          number: i\n        });\n      };\n\n      for (var i = 1; i <= daysInMonth; i++) {\n        _loop(i);\n      }\n\n      setListDays(newListDays);\n      setSelectedDay(0);\n      setListHours([]);\n      setSelectedHour(0);\n    }\n  }, [data, selectedMonth, selectedYear]);\n  useEffect(function () {\n    if (data.available && selectedDay) {\n      var d = new Date(selectedYear, selectedMonth, selectedDay);\n      var year = d.getFullYear();\n      var month = d.getMonth() + 1;\n      var day = d.getDate();\n      month = month < 10 ? \"0\" + month : month;\n      day = day < 10 ? \"0\" + day : day;\n      var selDate = year + \"-\" + month + \"-\" + day;\n      var availability = data.available.filter(function (e) {\n        return e.date === selDate;\n      });\n\n      if (availability && availability.length > 0) {\n        setListHours(availability[0].hours);\n      }\n    }\n\n    setSelectedHour(null);\n  }, [data, selectedDay]);\n  useEffect(function () {\n    var today = new Date();\n    setSelectedYear(today.getFullYear());\n    setSelectedMonth(today.getMonth());\n    setSelectedDay(today.getDate());\n  }, []);\n\n  var handleCloseButton = function handleCloseButton() {\n    setShow(false);\n  };\n\n  var handleFinishClick = function handleFinishClick() {\n    var res;\n    return _regeneratorRuntime.async(function handleFinishClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.id && service != null && selectedYear > 0 && selectedMonth > 0 && selectedDay > 0 && selectedHour != null)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Api.createAppointment(data.id, service, selectedYear, selectedMonth, selectedDay, selectedHour));\n\n          case 3:\n            res = _context.sent;\n\n            if (res.error === '') {\n              setShow(false);\n              navigation.navigate('Appointments');\n            } else {\n              alert(res.error);\n            }\n\n            _context.next = 8;\n            break;\n\n          case 7:\n            alert('Preencha todos os dados');\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleLeftDateClick = function handleLeftDateClick() {\n    var mountDate = new Date(selectedYear, selectedMonth, 1);\n    mountDate.setMonth(mountDate.getMonth() - 1);\n    setSelectedYear(mountDate.getFullYear());\n    setSelectedMonth(mountDate.getMonth());\n    setSelectedDay(0);\n  };\n\n  var handleRightDateClick = function handleRightDateClick() {\n    var mountDate = new Date(selectedYear, selectedMonth, 1);\n    mountDate.setMonth(mountDate.getMonth() + 1);\n    setSelectedYear(mountDate.getFullYear());\n    setSelectedMonth(mountDate.getMonth());\n    setSelectedDay(0);\n  };\n\n  return React.createElement(Modal, {\n    transparent: true,\n    visible: show,\n    animationType: \"slide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, React.createElement(ModalArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, React.createElement(CloseButton, {\n    onPress: handleCloseButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, React.createElement(ExpandIcon, {\n    width: \"40\",\n    height: \"40\",\n    fill: \"#000000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  })), React.createElement(ModalItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, React.createElement(UserInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, React.createElement(UserAvatar, {\n    source: {\n      uri: data.avatar\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }), React.createElement(UserName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, data.name))), service != null && React.createElement(ModalItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, React.createElement(ServiceInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, React.createElement(ServiceName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, data.services[service].name), React.createElement(ServicePrice, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, \"R$ \", data.services[service].price.toFixed(2)))), React.createElement(ModalItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, React.createElement(DateInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, React.createElement(DatePrevArea, {\n    onPress: handleLeftDateClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, React.createElement(NavPrevIcon, {\n    width: \"35\",\n    height: \"35\",\n    fill: \"#000000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  })), React.createElement(DateTitleArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }, React.createElement(DateTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, \" \", months[selectedMonth], \" \", selectedYear)), React.createElement(DateNextArea, {\n    onPress: handleRightDateClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }, React.createElement(NavNextIcon, {\n    width: \"35\",\n    height: \"35\",\n    fill: \"#000000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }))), React.createElement(DateList, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, listDays.map(function (item, key) {\n    return React.createElement(DateItem, {\n      key: key,\n      onPress: function onPress() {\n        return item.status ? setSelectedDay(item.number) : null;\n      },\n      style: {\n        backgroundColor: item.number === selectedDay ? \"#b641a9\" : \"#FFFFFF\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }, React.createElement(DateItemWeekDay, {\n      style: {\n        opacity: item.status ? 1 : 0.5,\n        color: item.number === selectedDay ? \"#FFFFFF\" : \"#000000\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 19\n      }\n    }, item.weekday), React.createElement(DateItemWeekNumber, {\n      style: {\n        opacity: item.status ? 1 : 0.5,\n        color: item.number === selectedDay ? \"#FFFFFF\" : \"#000000\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 19\n      }\n    }, item.number));\n  }))), selectedDay > 0 && listHours && listHours.length > 0 && React.createElement(ModalItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, React.createElement(TimeList, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, listHours.map(function (item, key) {\n    return React.createElement(TimeItem, {\n      key: key,\n      onPress: function onPress() {\n        return setSelectedHour(item);\n      },\n      style: {\n        backgroundColor: item === selectedHour ? \"#b641a9\" : \"#FFFFFF\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 19\n      }\n    }, React.createElement(TimeItemText, {\n      style: {\n        color: item === selectedHour ? \"#FFFFFF\" : \"#000000\",\n        fontWeight: item === selectedHour ? \"bold\" : \"normal\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }, item));\n  }))), React.createElement(FinishButton, {\n    onPress: handleFinishClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  }, React.createElement(FinishButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, \"Confirmar Agendamento\")))));\n});","map":{"version":3,"sources":["C:/desenvolvimento/BarberSchedule/App/src/components/BarberModal.js"],"names":["React","useState","useEffect","styled","useNavigation","Api","ExpandIcon","NavPrevIcon","NavNextIcon","Modal","ModalArea","View","ModalBody","ModalItem","UserInfo","UserAvatar","Image","UserName","Text","CloseButton","TouchableOpacity","ServiceInfo","ServiceName","ServicePrice","FinishButton","FinishButtonText","DateInfo","DatePrevArea","DateNextArea","DateTitleArea","DateTitle","DateList","ScrollView","DateItem","DateItemWeekDay","DateItemWeekNumber","TimeList","TimeItem","TimeItemText","months","days","show","setShow","data","service","navigation","listDays","setListDays","listHours","setListHours","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","selectedDay","setSelectedDay","selectedHour","setSelectedHour","available","daysInMonth","Date","getDate","newListDays","i","d","year","getFullYear","month","getMonth","day","selDate","availability","filter","e","date","push","status","length","weekday","getDay","number","hours","today","handleCloseButton","handleFinishClick","id","createAppointment","res","error","navigate","alert","handleLeftDateClick","mountDate","setMonth","handleRightDateClick","uri","avatar","name","services","price","toFixed","map","item","key","backgroundColor","opacity","color","fontWeight"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,GAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AAEA,IAAMC,KAAK,GAAGN,MAAM,CAACM,KAAV,0EAAX;AAEA,IAAMC,SAAS,GAAGP,MAAM,CAACQ,IAAV,iKAAf;AAMA,IAAMC,SAAS,GAAGT,MAAM,CAACQ,IAAV,sOAAf;AAQA,IAAME,SAAS,GAAGV,MAAM,CAACQ,IAAV,8KAAf;AAOA,IAAMG,QAAQ,GAAGX,MAAM,CAACQ,IAAV,8HAAd;AAKA,IAAMI,UAAU,GAAGZ,MAAM,CAACa,KAAV,8JAAhB;AAOA,IAAMC,QAAQ,GAAGd,MAAM,CAACe,IAAV,2IAAd;AAMA,IAAMC,WAAW,GAAGhB,MAAM,CAACiB,gBAAV,+GAAjB;AAKA,IAAMC,WAAW,GAAGlB,MAAM,CAACQ,IAAV,yIAAjB;AAKA,IAAMW,WAAW,GAAGnB,MAAM,CAACe,IAAV,0HAAjB;AAKA,IAAMK,YAAY,GAAGpB,MAAM,CAACe,IAAV,0HAAlB;AAKA,IAAMM,YAAY,GAAGrB,MAAM,CAACiB,gBAAV,2MAAlB;AAQA,IAAMK,gBAAgB,GAAGtB,MAAM,CAACe,IAAV,6IAAtB;AAMA,IAAMQ,QAAQ,GAAGvB,MAAM,CAACQ,IAAV,4JAAd;AAMA,IAAMgB,YAAY,GAAGxB,MAAM,CAACiB,gBAAV,sHAAlB;AAKA,IAAMQ,YAAY,GAAGzB,MAAM,CAACiB,gBAAV,wHAAlB;AAKA,IAAMS,aAAa,GAAG1B,MAAM,CAACe,IAAV,iGAAnB;AAIA,IAAMY,SAAS,GAAG3B,MAAM,CAACe,IAAV,6IAAf;AAMA,IAAMa,QAAQ,GAAG5B,MAAM,CAAC6B,UAAV,8EAAd;AAEA,IAAMC,QAAQ,GAAG9B,MAAM,CAACiB,gBAAV,yNAAd;AASA,IAAMc,eAAe,GAAG/B,MAAM,CAACe,IAAV,0HAArB;AAKA,IAAMiB,kBAAkB,GAAGhC,MAAM,CAACe,IAAV,0HAAxB;AAKA,IAAMkB,QAAQ,GAAGjC,MAAM,CAAC6B,UAAV,8EAAd;AAEA,IAAMK,QAAQ,GAAGlC,MAAM,CAACiB,gBAAV,6LAAd;AAQA,IAAMkB,YAAY,GAAGnC,MAAM,CAACe,IAAV,oGAAlB;AAIA,IAAMqB,MAAM,GAAG,CACb,SADa,EAEb,WAFa,EAGb,OAHa,EAIb,OAJa,EAKb,MALa,EAMb,OANa,EAOb,OAPa,EAQb,QARa,EASb,UATa,EAUb,SAVa,EAWb,UAXa,EAYb,UAZa,CAAf;AAeA,IAAMC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAb;AAEA,gBAAe,gBAAsC;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACnD,MAAMC,UAAU,GAAGzC,aAAa,EAAhC;;AAEA,kBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAO6C,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkC9C,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAO+C,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwChD,QAAQ,CAAC,CAAD,CAAhD;AAAA;AAAA,MAAOiD,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA0ClD,QAAQ,CAAC,CAAD,CAAlD;AAAA;AAAA,MAAOmD,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAsCpD,QAAQ,CAAC,CAAD,CAA9C;AAAA;AAAA,MAAOqD,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAAwCtD,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAOuD,YAAP;AAAA,MAAqBC,eAArB;;AAEAvD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyC,IAAI,CAACe,SAAT,EAAoB;AAClB,UAAIC,WAAW,GAAG,IAAIC,IAAJ,CAASV,YAAT,EAAuBE,aAAa,GAAG,CAAvC,EAA0C,CAA1C,EAA6CS,OAA7C,EAAlB;AACA,UAAIC,WAAW,GAAG,EAAlB;;AAFkB,iCAITC,CAJS;AAKhB,YAAIC,CAAC,GAAG,IAAIJ,IAAJ,CAASV,YAAT,EAAuBE,aAAvB,EAAsCW,CAAtC,CAAR;AACA,YAAIE,IAAI,GAAGD,CAAC,CAACE,WAAF,EAAX;AACA,YAAIC,KAAK,GAAGH,CAAC,CAACI,QAAF,KAAe,CAA3B;AACA,YAAIC,GAAG,GAAGL,CAAC,CAACH,OAAF,EAAV;AACAM,QAAAA,KAAK,GAAGA,KAAK,GAAG,EAAR,GAAa,MAAMA,KAAnB,GAA2BA,KAAnC;AACAE,QAAAA,GAAG,GAAGA,GAAG,GAAG,EAAN,GAAW,MAAMA,GAAjB,GAAuBA,GAA7B;AACA,YAAIC,OAAO,GAAML,IAAN,SAAcE,KAAd,SAAuBE,GAAlC;AAEA,YAAIE,YAAY,GAAG5B,IAAI,CAACe,SAAL,CAAec,MAAf,CAAsB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACC,IAAF,KAAWJ,OAAlB;AAAA,SAAtB,CAAnB;AAEAR,QAAAA,WAAW,CAACa,IAAZ,CAAiB;AACfC,UAAAA,MAAM,EAAEL,YAAY,CAACM,MAAb,GAAsB,CAAtB,GAA0B,IAA1B,GAAiC,KAD1B;AAEfC,UAAAA,OAAO,EAAEtC,IAAI,CAACwB,CAAC,CAACe,MAAF,EAAD,CAFE;AAGfC,UAAAA,MAAM,EAAEjB;AAHO,SAAjB;AAfgB;;AAIlB,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,WAArB,EAAkCI,CAAC,EAAnC,EAAuC;AAAA,cAA9BA,CAA8B;AAgBtC;;AAEDhB,MAAAA,WAAW,CAACe,WAAD,CAAX;AACAP,MAAAA,cAAc,CAAC,CAAD,CAAd;AACAN,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAQ,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD;AACF,GA5BQ,EA4BN,CAACd,IAAD,EAAOS,aAAP,EAAsBF,YAAtB,CA5BM,CAAT;AA8BAhD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyC,IAAI,CAACe,SAAL,IAAkBJ,WAAtB,EAAmC;AACjC,UAAIU,CAAC,GAAG,IAAIJ,IAAJ,CAASV,YAAT,EAAuBE,aAAvB,EAAsCE,WAAtC,CAAR;AACA,UAAIW,IAAI,GAAGD,CAAC,CAACE,WAAF,EAAX;AACA,UAAIC,KAAK,GAAGH,CAAC,CAACI,QAAF,KAAe,CAA3B;AACA,UAAIC,GAAG,GAAGL,CAAC,CAACH,OAAF,EAAV;AACAM,MAAAA,KAAK,GAAGA,KAAK,GAAG,EAAR,GAAa,MAAMA,KAAnB,GAA2BA,KAAnC;AACAE,MAAAA,GAAG,GAAGA,GAAG,GAAG,EAAN,GAAW,MAAMA,GAAjB,GAAuBA,GAA7B;AACA,UAAIC,OAAO,GAAML,IAAN,SAAcE,KAAd,SAAuBE,GAAlC;AAEA,UAAIE,YAAY,GAAG5B,IAAI,CAACe,SAAL,CAAec,MAAf,CAAsB,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,IAAF,KAAWJ,OAAlB;AAAA,OAAtB,CAAnB;;AAEA,UAAIC,YAAY,IAAIA,YAAY,CAACM,MAAb,GAAsB,CAA1C,EAA6C;AAC3C5B,QAAAA,YAAY,CAACsB,YAAY,CAAC,CAAD,CAAZ,CAAgBU,KAAjB,CAAZ;AACD;AACF;;AACDxB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAjBQ,EAiBN,CAACd,IAAD,EAAOW,WAAP,CAjBM,CAAT;AAmBApD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgF,KAAK,GAAG,IAAItB,IAAJ,EAAZ;AACAT,IAAAA,eAAe,CAAC+B,KAAK,CAAChB,WAAN,EAAD,CAAf;AAEAb,IAAAA,gBAAgB,CAAC6B,KAAK,CAACd,QAAN,EAAD,CAAhB;AACAb,IAAAA,cAAc,CAAC2B,KAAK,CAACrB,OAAN,EAAD,CAAd;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,MAAMsB,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BzC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,MAAM0C,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACpBzC,IAAI,CAAC0C,EAAL,IAAWzC,OAAO,IAAI,IAAtB,IAA8BM,YAAY,GAAG,CAA7C,IACCE,aAAa,GAAG,CADjB,IACsBE,WAAW,GAAG,CADpC,IACyCE,YAAY,IAAI,IAFrC;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAIJnD,GAAG,CAACiF,iBAAJ,CACd3C,IAAI,CAAC0C,EADS,EACLzC,OADK,EACIM,YADJ,EAEdE,aAFc,EAECE,WAFD,EAEcE,YAFd,CAJI;;AAAA;AAIhB+B,YAAAA,GAJgB;;AAQpB,gBAAIA,GAAG,CAACC,KAAJ,KAAc,EAAlB,EAAsB;AACpB9C,cAAAA,OAAO,CAAC,KAAD,CAAP;AACAG,cAAAA,UAAU,CAAC4C,QAAX,CAAoB,cAApB;AACD,aAHD,MAGO;AACLC,cAAAA,KAAK,CAACH,GAAG,CAACC,KAAL,CAAL;AACD;;AAbmB;AAAA;;AAAA;AAgBtBE,YAAAA,KAAK,CAAC,yBAAD,CAAL;;AAhBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAqBA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,QAAIC,SAAS,GAAG,IAAIhC,IAAJ,CAASV,YAAT,EAAuBE,aAAvB,EAAsC,CAAtC,CAAhB;AACAwC,IAAAA,SAAS,CAACC,QAAV,CAAmBD,SAAS,CAACxB,QAAV,KAAuB,CAA1C;AACAjB,IAAAA,eAAe,CAACyC,SAAS,CAAC1B,WAAV,EAAD,CAAf;AACAb,IAAAA,gBAAgB,CAACuC,SAAS,CAACxB,QAAV,EAAD,CAAhB;AACAb,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAND;;AAQA,MAAMuC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC,QAAIF,SAAS,GAAG,IAAIhC,IAAJ,CAASV,YAAT,EAAuBE,aAAvB,EAAsC,CAAtC,CAAhB;AACAwC,IAAAA,SAAS,CAACC,QAAV,CAAmBD,SAAS,CAACxB,QAAV,KAAuB,CAA1C;AACAjB,IAAAA,eAAe,CAACyC,SAAS,CAAC1B,WAAV,EAAD,CAAf;AACAb,IAAAA,gBAAgB,CAACuC,SAAS,CAACxB,QAAV,EAAD,CAAhB;AACAb,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAND;;AAQA,SACE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,IAApB;AAA0B,IAAA,OAAO,EAAEd,IAAnC;AAAyC,IAAA,aAAa,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE0C,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,IAAlB;AAAuB,IAAA,MAAM,EAAC,IAA9B;AAAmC,IAAA,IAAI,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAE;AAAEY,MAAAA,GAAG,EAAEpD,IAAI,CAACqD;AAAZ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWrD,IAAI,CAACsD,IAAhB,CAFF,CADF,CALF,EAYGrD,OAAO,IAAI,IAAX,IACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,IAAI,CAACuD,QAAL,CAActD,OAAd,EAAuBqD,IAArC,CADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACMtD,IAAI,CAACuD,QAAL,CAActD,OAAd,EAAuBuD,KAAvB,CAA6BC,OAA7B,CAAqC,CAArC,CADN,CAFF,CADF,CAbJ,EAuBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAET,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,MAAM,EAAC,IAA/B;AAAoC,IAAA,IAAI,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEGpD,MAAM,CAACa,aAAD,CAFT,OAE2BF,YAF3B,CADF,CAJF,EAUE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE4C,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,MAAM,EAAC,IAA/B;AAAoC,IAAA,IAAI,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF,EAeE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE,IAAtB;AAA4B,IAAA,8BAA8B,EAAE,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhD,QAAQ,CAACuD,GAAT,CAAa,UAACC,IAAD,EAAOC,GAAP;AAAA,WACZ,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,OAAO,EAAE;AAAA,eACPD,IAAI,CAAC1B,MAAL,GAAcrB,cAAc,CAAC+C,IAAI,CAACtB,MAAN,CAA5B,GAA4C,IADrC;AAAA,OAFX;AAKE,MAAA,KAAK,EAAE;AACLwB,QAAAA,eAAe,EACbF,IAAI,CAACtB,MAAL,KAAgB1B,WAAhB,GAA8B,SAA9B,GAA0C;AAFvC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE;AACLmD,QAAAA,OAAO,EAAEH,IAAI,CAAC1B,MAAL,GAAc,CAAd,GAAkB,GADtB;AAEL8B,QAAAA,KAAK,EACHJ,IAAI,CAACtB,MAAL,KAAgB1B,WAAhB,GAA8B,SAA9B,GAA0C;AAHvC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGgD,IAAI,CAACxB,OAPR,CAVF,EAmBE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAE;AACL2B,QAAAA,OAAO,EAAEH,IAAI,CAAC1B,MAAL,GAAc,CAAd,GAAkB,GADtB;AAEL8B,QAAAA,KAAK,EACHJ,IAAI,CAACtB,MAAL,KAAgB1B,WAAhB,GAA8B,SAA9B,GAA0C;AAHvC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGgD,IAAI,CAACtB,MAPR,CAnBF,CADY;AAAA,GAAb,CADH,CAfF,CAvBF,EAyEG1B,WAAW,GAAG,CAAd,IAAmBN,SAAnB,IAAgCA,SAAS,CAAC6B,MAAV,GAAmB,CAAnD,IACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAE,IADd;AAEE,IAAA,8BAA8B,EAAE,KAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG7B,SAAS,CAACqD,GAAV,CAAc,UAACC,IAAD,EAAOC,GAAP;AAAA,WACb,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,OAAO,EAAE;AAAA,eAAM9C,eAAe,CAAC6C,IAAD,CAArB;AAAA,OAFX;AAGE,MAAA,KAAK,EAAE;AACLE,QAAAA,eAAe,EACbF,IAAI,KAAK9C,YAAT,GAAwB,SAAxB,GAAoC;AAFjC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAE;AACLkD,QAAAA,KAAK,EAAEJ,IAAI,KAAK9C,YAAT,GAAwB,SAAxB,GAAoC,SADtC;AAELmD,QAAAA,UAAU,EAAEL,IAAI,KAAK9C,YAAT,GAAwB,MAAxB,GAAiC;AAFxC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG8C,IANH,CARF,CADa;AAAA,GAAd,CAJH,CADF,CA1EJ,EAsGE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAElB,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAtGF,CADF,CADF,CADF;AAgHD,CA5ND","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport Api from \"../Api\";\r\nimport ExpandIcon from \"../assets/expand.svg\";\r\nimport NavPrevIcon from \"../assets/nav_prev.svg\";\r\nimport NavNextIcon from \"../assets/nav_next.svg\";\r\n\r\nconst Modal = styled.Modal``;\r\n\r\nconst ModalArea = styled.View`\r\n  flex: 1;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst ModalBody = styled.View`\r\n  background-color: #d6b2ce;\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n  min-height: 300px;\r\n  padding: 10px 20px 40px 20px;\r\n`;\r\n\r\nconst ModalItem = styled.View`\r\n  background-color: #ffffff;\r\n  border-radius: 10px;\r\n  margin-bottom: 15px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst UserInfo = styled.View`\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserAvatar = styled.Image`\r\n  width: 56px;\r\n  height: 56px;\r\n  border-radius: 10px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst UserName = styled.Text`\r\n  color: #000000;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst CloseButton = styled.TouchableOpacity`\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n\r\nconst ServiceInfo = styled.View`\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ServiceName = styled.Text`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ServicePrice = styled.Text`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FinishButton = styled.TouchableOpacity`\r\n  background-color: #8b4488;\r\n  height: 60px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst FinishButtonText = styled.Text`\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst DateInfo = styled.View`\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst DatePrevArea = styled.TouchableOpacity`\r\n  flex: 1;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst DateNextArea = styled.TouchableOpacity`\r\n  flex: 1;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst DateTitleArea = styled.Text`\r\n  width: 140px;\r\n`;\r\n\r\nconst DateTitle = styled.Text`\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n  color: #000000;\r\n`;\r\n\r\nconst DateList = styled.ScrollView``;\r\n\r\nconst DateItem = styled.TouchableOpacity`\r\n  width: 45px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst DateItemWeekDay = styled.Text`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst DateItemWeekNumber = styled.Text`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst TimeList = styled.ScrollView``;\r\n\r\nconst TimeItem = styled.TouchableOpacity`\r\n  width: 75px;\r\n  height: 40px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst TimeItemText = styled.Text`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst months = [\r\n  \"Janeiro\",\r\n  \"Fevereiro\",\r\n  \"Mar√ßo\",\r\n  \"Abril\",\r\n  \"Maio\",\r\n  \"Junho\",\r\n  \"Julho\",\r\n  \"Agosto\",\r\n  \"Setembro\",\r\n  \"Outubro\",\r\n  \"Novembro\",\r\n  \"Dezembro\",\r\n];\r\n\r\nconst days = [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sab\"];\r\n\r\nexport default ({ show, setShow, data, service }) => {\r\n  const navigation = useNavigation();\r\n\r\n  const [listDays, setListDays] = useState([]);\r\n  const [listHours, setListHours] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(0);\r\n  const [selectedMonth, setSelectedMonth] = useState(0);\r\n  const [selectedDay, setSelectedDay] = useState(0);\r\n  const [selectedHour, setSelectedHour] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (data.available) {\r\n      let daysInMonth = new Date(selectedYear, selectedMonth + 1, 0).getDate();\r\n      let newListDays = [];\r\n\r\n      for (let i = 1; i <= daysInMonth; i++) {\r\n        let d = new Date(selectedYear, selectedMonth, i);\r\n        let year = d.getFullYear();\r\n        let month = d.getMonth() + 1;\r\n        let day = d.getDate();\r\n        month = month < 10 ? \"0\" + month : month;\r\n        day = day < 10 ? \"0\" + day : day;\r\n        let selDate = `${year}-${month}-${day}`;\r\n\r\n        let availability = data.available.filter((e) => e.date === selDate);\r\n\r\n        newListDays.push({\r\n          status: availability.length > 0 ? true : false,\r\n          weekday: days[d.getDay()],\r\n          number: i,\r\n        });\r\n      }\r\n\r\n      setListDays(newListDays);\r\n      setSelectedDay(0);\r\n      setListHours([]);\r\n      setSelectedHour(0);\r\n    }\r\n  }, [data, selectedMonth, selectedYear]);\r\n\r\n  useEffect(() => {\r\n    if (data.available && selectedDay) {\r\n      let d = new Date(selectedYear, selectedMonth, selectedDay);\r\n      let year = d.getFullYear();\r\n      let month = d.getMonth() + 1;\r\n      let day = d.getDate();\r\n      month = month < 10 ? \"0\" + month : month;\r\n      day = day < 10 ? \"0\" + day : day;\r\n      let selDate = `${year}-${month}-${day}`;\r\n\r\n      let availability = data.available.filter((e) => e.date === selDate);\r\n\r\n      if (availability && availability.length > 0) {\r\n        setListHours(availability[0].hours);\r\n      }\r\n    }\r\n    setSelectedHour(null);\r\n  }, [data, selectedDay]);\r\n\r\n  useEffect(() => {\r\n    let today = new Date();\r\n    setSelectedYear(today.getFullYear());\r\n    // Lembrar que o primeiro m√™s em JS √© 0\r\n    setSelectedMonth(today.getMonth());\r\n    setSelectedDay(today.getDate());\r\n  }, []);\r\n\r\n  const handleCloseButton = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleFinishClick = async () => {\r\n    if (data.id && service != null && selectedYear > 0 \r\n      && selectedMonth > 0 && selectedDay > 0 && selectedHour != null) {\r\n        \r\n        let res = await Api.createAppointment(\r\n          data.id, service, selectedYear, \r\n          selectedMonth, selectedDay, selectedHour)\r\n\r\n        if (res.error === '') {\r\n          setShow(false)\r\n          navigation.navigate('Appointments')\r\n        } else {\r\n          alert(res.error)\r\n        }\r\n    } \r\n    else {\r\n      alert('Preencha todos os dados')\r\n    }\r\n\r\n  };\r\n\r\n  const handleLeftDateClick = () => {\r\n    let mountDate = new Date(selectedYear, selectedMonth, 1);\r\n    mountDate.setMonth(mountDate.getMonth() - 1);\r\n    setSelectedYear(mountDate.getFullYear());\r\n    setSelectedMonth(mountDate.getMonth());\r\n    setSelectedDay(0);\r\n  };\r\n\r\n  const handleRightDateClick = () => {\r\n    let mountDate = new Date(selectedYear, selectedMonth, 1);\r\n    mountDate.setMonth(mountDate.getMonth() + 1);\r\n    setSelectedYear(mountDate.getFullYear());\r\n    setSelectedMonth(mountDate.getMonth());\r\n    setSelectedDay(0);\r\n  };\r\n\r\n  return (\r\n    <Modal transparent={true} visible={show} animationType=\"slide\">\r\n      <ModalArea>\r\n        <ModalBody>\r\n          <CloseButton onPress={handleCloseButton}>\r\n            <ExpandIcon width=\"40\" height=\"40\" fill=\"#000000\" />\r\n          </CloseButton>\r\n\r\n          <ModalItem>\r\n            <UserInfo>\r\n              <UserAvatar source={{ uri: data.avatar }} />\r\n              <UserName>{data.name}</UserName>\r\n            </UserInfo>\r\n          </ModalItem>\r\n\r\n          {service != null && (\r\n            <ModalItem>\r\n              <ServiceInfo>\r\n                <ServiceName>{data.services[service].name}</ServiceName>\r\n                <ServicePrice>\r\n                  R$ {data.services[service].price.toFixed(2)}\r\n                </ServicePrice>\r\n              </ServiceInfo>\r\n            </ModalItem>\r\n          )}\r\n\r\n          <ModalItem>\r\n            <DateInfo>\r\n              <DatePrevArea onPress={handleLeftDateClick}>\r\n                <NavPrevIcon width=\"35\" height=\"35\" fill=\"#000000\" />\r\n              </DatePrevArea>\r\n              <DateTitleArea>\r\n                <DateTitle>\r\n                  {\" \"}\r\n                  {months[selectedMonth]} {selectedYear}\r\n                </DateTitle>\r\n              </DateTitleArea>\r\n              <DateNextArea onPress={handleRightDateClick}>\r\n                <NavNextIcon width=\"35\" height=\"35\" fill=\"#000000\" />\r\n              </DateNextArea>\r\n            </DateInfo>\r\n            <DateList horizontal={true} showsHorizontalScrollIndicator={false}>\r\n              {listDays.map((item, key) => (\r\n                <DateItem\r\n                  key={key}\r\n                  onPress={() =>\r\n                    item.status ? setSelectedDay(item.number) : null\r\n                  }\r\n                  style={{\r\n                    backgroundColor:\r\n                      item.number === selectedDay ? \"#b641a9\" : \"#FFFFFF\",\r\n                  }}\r\n                >\r\n                  <DateItemWeekDay\r\n                    style={{\r\n                      opacity: item.status ? 1 : 0.5,\r\n                      color:\r\n                        item.number === selectedDay ? \"#FFFFFF\" : \"#000000\",\r\n                    }}\r\n                  >\r\n                    {item.weekday}\r\n                  </DateItemWeekDay>\r\n                  <DateItemWeekNumber\r\n                    style={{\r\n                      opacity: item.status ? 1 : 0.5,\r\n                      color:\r\n                        item.number === selectedDay ? \"#FFFFFF\" : \"#000000\",\r\n                    }}\r\n                  >\r\n                    {item.number}\r\n                  </DateItemWeekNumber>\r\n                </DateItem>\r\n              ))}\r\n            </DateList>\r\n          </ModalItem>\r\n\r\n          {selectedDay > 0 && listHours && listHours.length > 0 && (\r\n            <ModalItem>\r\n              <TimeList\r\n                horizontal={true}\r\n                showsHorizontalScrollIndicator={false}\r\n              >\r\n                {listHours.map((item, key) => (\r\n                  <TimeItem\r\n                    key={key}\r\n                    onPress={() => setSelectedHour(item)}\r\n                    style={{\r\n                      backgroundColor:\r\n                        item === selectedHour ? \"#b641a9\" : \"#FFFFFF\",\r\n                    }}\r\n                  >\r\n                    <TimeItemText\r\n                      style={{\r\n                        color: item === selectedHour ? \"#FFFFFF\" : \"#000000\",\r\n                        fontWeight: item === selectedHour ? \"bold\" : \"normal\",\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </TimeItemText>\r\n                  </TimeItem>\r\n                ))}\r\n              </TimeList>\r\n            </ModalItem>\r\n          )}\r\n\r\n          <FinishButton onPress={handleFinishClick}>\r\n            <FinishButtonText>Confirmar Agendamento</FinishButtonText>\r\n          </FinishButton>\r\n        </ModalBody>\r\n      </ModalArea>\r\n    </Modal>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}