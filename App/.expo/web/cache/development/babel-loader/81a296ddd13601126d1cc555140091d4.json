{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AppTypedError = function (_Error) {\n  _inherits(AppTypedError, _Error);\n\n  var _super = _createSuper(AppTypedError);\n\n  function AppTypedError(message) {\n    var _this;\n\n    _classCallCheck(this, AppTypedError);\n\n    _this = _super.call(this, message);\n    _this.name = \"UserTypeError\";\n    return _this;\n  }\n\n  return AppTypedError;\n}(_wrapNativeSuper(Error));\n\nexport default AppTypedError;","map":{"version":3,"sources":["C:/desenvolvimento/BarberSchedule/App/src/util/AppTypedError.js"],"names":["AppTypedError","message","name","Error"],"mappings":";;;;;;;;;;IAAMA,a;;;;;AACJ,yBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,8BAAMA,OAAN;AACA,UAAKC,IAAL,GAAY,eAAZ;AAFmB;AAGpB;;;mBAJyBC,K;;AAO5B,eAAeH,aAAf","sourcesContent":["class AppTypedError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = \"UserTypeError\";\r\n  }\r\n}\r\n\r\nexport default AppTypedError;\r\n"]},"metadata":{},"sourceType":"module"}