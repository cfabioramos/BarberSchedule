{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\desenvolvimento\\\\BarberSchedule\\\\App\\\\src\\\\screens\\\\Appointments\\\\index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Api from \"../../Api\";\nimport { Container, Scroller, AppointmentInfoArea, AppointmentInfoItem, AppointmentUserData, UserAvatar, UserName, AppointmentServiceData, ServiceName, ServicePrice, AppointmentServiceSchedule, ScheduleDateButton, ScheduleButtonText, ScheduleTimeButton, LoadingIcon } from \"./styles\";\nexport default (function () {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      appointments = _useState4[0],\n      setAppointments = _useState4[1];\n\n  useEffect(function () {\n    var getAppointments = function getAppointments() {\n      var json;\n      return _regeneratorRuntime.async(function getAppointments$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Api.findAppointments());\n\n            case 3:\n              json = _context.sent;\n\n              if (json.error === \"\") {\n                setAppointments(json);\n              } else {\n                alert(\"Erro: \" + json.error);\n              }\n\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getAppointments();\n  }, []);\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Scroller, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(AppointmentInfoArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, appointments && appointments.data.map(function (appointment, key) {\n    return React.createElement(AppointmentInfoItem, {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, React.createElement(AppointmentUserData, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, React.createElement(UserAvatar, {\n      source: {\n        uri: appointment.avatar\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }), React.createElement(UserName, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, appointment.name)), React.createElement(AppointmentServiceData, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, React.createElement(ServiceName, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, appointment.serviceName), React.createElement(ServicePrice, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, \"R$ \", appointment.servicePrice.toFixed(2))), React.createElement(AppointmentServiceSchedule, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, React.createElement(ScheduleDateButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, React.createElement(ScheduleButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, appointment.scheduleDate)), React.createElement(ScheduleTimeButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, React.createElement(ScheduleButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, appointment.scheduleTime))));\n  }))));\n});","map":{"version":3,"sources":["C:/desenvolvimento/BarberSchedule/App/src/screens/Appointments/index.js"],"names":["React","useState","useEffect","Api","Container","Scroller","AppointmentInfoArea","AppointmentInfoItem","AppointmentUserData","UserAvatar","UserName","AppointmentServiceData","ServiceName","ServicePrice","AppointmentServiceSchedule","ScheduleDateButton","ScheduleButtonText","ScheduleTimeButton","LoadingIcon","loading","setLoading","appointments","setAppointments","getAppointments","findAppointments","json","error","alert","data","map","appointment","key","uri","avatar","name","serviceName","servicePrice","toFixed","scheduleDate","scheduleTime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Api from \"../../Api\";\r\n\r\nimport {\r\n  Container,\r\n  Scroller,\r\n  AppointmentInfoArea,\r\n  AppointmentInfoItem,\r\n  AppointmentUserData,\r\n  UserAvatar,\r\n  UserName,\r\n  AppointmentServiceData,\r\n  ServiceName,\r\n  ServicePrice,\r\n  AppointmentServiceSchedule,\r\n  ScheduleDateButton,\r\n  ScheduleButtonText,\r\n  ScheduleTimeButton,\r\n  LoadingIcon,\r\n} from \"./styles\";\r\n\r\nexport default () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [appointments, setAppointments] = useState();\r\n\r\n  useEffect(() => {\r\n    const getAppointments = async () => {\r\n      setLoading(true);\r\n\r\n      const json = await Api.findAppointments();\r\n      if (json.error === \"\") {\r\n        setAppointments(json);\r\n      } else {\r\n        alert(\"Erro: \" + json.error);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    getAppointments();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Scroller>\r\n        <AppointmentInfoArea>\r\n          {appointments &&\r\n            appointments.data.map((appointment, key) => (\r\n              <AppointmentInfoItem key={key}>\r\n                <AppointmentUserData>\r\n                  <UserAvatar source={{ uri: appointment.avatar }} />\r\n                  <UserName>{appointment.name}</UserName>\r\n                </AppointmentUserData>\r\n                <AppointmentServiceData>\r\n                  <ServiceName>{appointment.serviceName}</ServiceName>\r\n                  <ServicePrice>\r\n                    R$ {appointment.servicePrice.toFixed(2)}\r\n                  </ServicePrice>\r\n                </AppointmentServiceData>\r\n                <AppointmentServiceSchedule>\r\n                  <ScheduleDateButton>\r\n                    <ScheduleButtonText>\r\n                      {appointment.scheduleDate}\r\n                    </ScheduleButtonText>\r\n                  </ScheduleDateButton>\r\n                  <ScheduleTimeButton>\r\n                    <ScheduleButtonText>\r\n                      {appointment.scheduleTime}\r\n                    </ScheduleButtonText>\r\n                  </ScheduleTimeButton>\r\n                </AppointmentServiceSchedule>\r\n              </AppointmentInfoItem>\r\n            ))}\r\n        </AppointmentInfoArea>\r\n      </Scroller>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}