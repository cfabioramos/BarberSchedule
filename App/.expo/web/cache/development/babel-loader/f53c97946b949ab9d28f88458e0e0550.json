{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\desenvolvimento\\\\BarberSchedule\\\\App\\\\src\\\\screens\\\\EstablishmentProfile\\\\index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { TOKEN_KEY } from \"../../util/Commons\";\nimport * as Location from \"expo-location\";\nimport Api from \"../../Api\";\nimport NumericInputComponent from \"../../components/NumericInputComponent\";\nimport InputComponent from \"../../components/InputComponent\";\nimport FlexibleInputComponent from \"../../components/FlexibleInputComponent\";\nimport ImagePickerComponent from \"../../components/ImagePickerComponent\";\nimport { Container, InputArea, CustomButton, CustomButtonText, InputHorizontalArea, ImageArea, LocalFavButton, LoadingIcon, Scroller } from \"./styles\";\nimport PersonIcon from \"../../assets/person.svg\";\nimport LocationIcon from \"../../assets/crosshair.svg\";\nimport ZipCodeIcon from \"../../assets/mail.svg\";\nimport AddressAIcon from \"../../assets/placa_a.svg\";\nimport HouseNumberIcon from \"../../assets/house_number.svg\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { DEFAULT_COLLOR_PALLET } from \"../ColorsPalette\";\nexport default (function () {\n  var _useContext = useContext(UserContext),\n      userDispatch = _useContext.dispatch;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nameField = _useState4[0],\n      setNameField = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cepField = _useState6[0],\n      setCepField = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      addressField = _useState8[0],\n      setAddressField = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      addressNumberField = _useState10[0],\n      setAddressNumberField = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      latitude = _useState12[0],\n      setLatitude = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      longitude = _useState14[0],\n      setLongitude = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      imageFieldA = _useState16[0],\n      setImageFieldA = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      imageFieldB = _useState18[0],\n      setImageFieldB = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      imageFieldC = _useState20[0],\n      setImageFieldC = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      imageFieldD = _useState22[0],\n      setImageFieldD = _useState22[1];\n\n  var _useState23 = useState(null),\n      _useState24 = _slicedToArray(_useState23, 2),\n      imageFieldE = _useState24[0],\n      setImageFieldE = _useState24[1];\n\n  var _useState25 = useState(null),\n      _useState26 = _slicedToArray(_useState25, 2),\n      imageFieldF = _useState26[0],\n      setImageFieldF = _useState26[1];\n\n  useEffect(function () {\n    var getUserProfileData = function getUserProfileData() {\n      var token, res;\n      return _regeneratorRuntime.async(function getUserProfileData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(TOKEN_KEY));\n\n            case 2:\n              token = _context.sent;\n\n              if (!token) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(Api.checkToken(token));\n\n            case 6:\n              res = _context.sent;\n\n              if (res) {\n                userDispatch({\n                  type: \"setUserContext\",\n                  payload: {\n                    avatar: res.avatar,\n                    type: res.type\n                  }\n                });\n                setNameField(res.name);\n\n                if (res.userAddress && res.userAddress.cep) {\n                  setCepField(res.userAddress.cep.toString());\n                  setAddressField(res.userAddress.address);\n                  setAddressNumberField(res.userAddress.number);\n                }\n              } else {\n                navigation.navigate(\"SignIn\");\n              }\n\n              _context.next = 11;\n              break;\n\n            case 10:\n              navigation.navigate(\"SignUp\");\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getUserProfileData();\n  }, []);\n\n  var handleUpdateClick = function handleUpdateClick() {\n    if (nameField && cepField && addressField && addressNumberField) {\n        updateEstablishmentData();\n      } else if (!nameField) {\n      alert(\"O nome deve ser informado\");\n    } else if (!cepField) {\n      alert(\"Informe o CEP para poder ser localizado pelos usuários do aplicativo.\");\n    } else if (!addressNumberField) {\n      alert(\"Informe o número do endereço.\");\n    } else {\n      alert(\"Adicione ao menos uma imagem de capa\");\n    }\n  };\n\n  var handleLogoutClick = function handleLogoutClick() {\n    navigation.reset({\n      routes: [{\n        name: \"SignIn\"\n      }]\n    });\n  };\n\n  var handleCep = function handleCep() {\n    var addressObj;\n    return _regeneratorRuntime.async(function handleCep$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!cepField) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Api.findAddressByCep(cepField));\n\n          case 3:\n            addressObj = _context2.sent;\n            setAddressField(addressObj.logradouro ? addressObj.logradouro : addressObj.localidade);\n            _context2.next = 8;\n            break;\n\n          case 7:\n            setAddressField(\"\");\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateEstablishmentData = function updateEstablishmentData() {\n    var formData, userData;\n    return _regeneratorRuntime.async(function updateEstablishmentData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            formData = new FormData();\n            formData.append(\"name\", nameField);\n            formData.append(\"cep\", cepField);\n            formData.append(\"number\", addressNumberField);\n            formData.append(\"latitude\", latitude);\n            formData.append(\"longitude\", longitude);\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(Api.submitMultipartWithFormData(\"users\", \"PUT\", formData));\n\n          case 8:\n            userData = _context3.sent;\n            if (userData) alert(\"Dados atualizados\");\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleFavClick = function handleFavClick() {\n    return _regeneratorRuntime.async(function handleFavClick$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            setLoading(true);\n\n            (function _callee() {\n              var _await$Location$reque, status, location, geoLocationData, newCep, addressObj;\n\n              return _regeneratorRuntime.async(function _callee$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n                    case 2:\n                      _await$Location$reque = _context4.sent;\n                      status = _await$Location$reque.status;\n\n                      if (!(status !== \"granted\")) {\n                        _context4.next = 7;\n                        break;\n                      }\n\n                      setErrorMsg(\"Permission to access location was denied\");\n                      return _context4.abrupt(\"return\");\n\n                    case 7:\n                      _context4.next = 9;\n                      return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n                        accuracy: Location.Accuracy.Highest\n                      }));\n\n                    case 9:\n                      location = _context4.sent;\n                      setLatitude(location.coords.latitude);\n                      setLongitude(location.coords.longitude);\n                      _context4.next = 14;\n                      return _regeneratorRuntime.awrap(Api.findGeoLocation(location.coords.latitude, location.coords.longitude));\n\n                    case 14:\n                      geoLocationData = _context4.sent;\n                      newCep = geoLocationData.address.postcode;\n\n                      if (!newCep) {\n                        _context4.next = 22;\n                        break;\n                      }\n\n                      setCepField(newCep);\n                      _context4.next = 20;\n                      return _regeneratorRuntime.awrap(Api.findAddressByCep(newCep));\n\n                    case 20:\n                      addressObj = _context4.sent;\n                      setAddressField(addressObj.logradouro ? addressObj.logradouro : addressObj.localidade);\n\n                    case 22:\n                      setLoading(false);\n\n                    case 23:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            })();\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, React.createElement(Scroller, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, React.createElement(InputArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, React.createElement(InputComponent, {\n    IconSvg: PersonIcon,\n    placeholder: \"Nome\",\n    value: nameField,\n    onChangeText: function onChangeText(t) {\n      return setNameField(t);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }), React.createElement(InputHorizontalArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, React.createElement(LocalFavButton, {\n    onPress: handleFavClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, React.createElement(LocationIcon, {\n    width: \"22\",\n    height: \"22\",\n    fill: DEFAULT_COLLOR_PALLET[0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  })), React.createElement(NumericInputComponent, {\n    IconSvg: ZipCodeIcon,\n    placeholder: \"CEP\",\n    value: cepField,\n    onChangeText: function onChangeText(t) {\n      return setCepField(t);\n    },\n    onBlur: handleCep,\n    maxLength: 9,\n    width: \"80%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  })), React.createElement(InputComponent, {\n    IconSvg: AddressAIcon,\n    placeholder: \"Endere\\xE7o\",\n    value: addressField,\n    readOnly: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }), React.createElement(FlexibleInputComponent, {\n    width: 35,\n    IconSvg: HouseNumberIcon,\n    placeholder: \"No\",\n    value: addressNumberField,\n    onChangeText: function onChangeText(t) {\n      return setAddressNumberField(t);\n    },\n    maxLength: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }), loading && React.createElement(LoadingIcon, {\n    size: \"large\",\n    color: \"#FFFFFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }), React.createElement(ImageArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, React.createElement(ImagePickerComponent, {\n    fieldPlaceholder: \"Imagem\",\n    imageField: imageFieldA,\n    setimageField: setImageFieldA,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }), React.createElement(ImagePickerComponent, {\n    fieldPlaceholder: \"Imagem\",\n    imageField: imageFieldB,\n    setimageField: setImageFieldB,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }), React.createElement(ImagePickerComponent, {\n    fieldPlaceholder: \"Imagem\",\n    imageField: imageFieldC,\n    setimageField: setImageFieldC,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  })), React.createElement(ImageArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, React.createElement(ImagePickerComponent, {\n    fieldPlaceholder: \"Imagem\",\n    imageField: imageFieldD,\n    setimageField: setImageFieldD,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }), React.createElement(ImagePickerComponent, {\n    fieldPlaceholder: \"Imagem\",\n    imageField: imageFieldE,\n    setimageField: setImageFieldE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }), React.createElement(ImagePickerComponent, {\n    fieldPlaceholder: \"Imagem\",\n    imageField: imageFieldF,\n    setimageField: setImageFieldF,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  })), React.createElement(CustomButton, {\n    onPress: handleUpdateClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, React.createElement(CustomButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"ATUALIZAR\")), React.createElement(CustomButton, {\n    onPress: handleLogoutClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, React.createElement(CustomButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"SAIR\")))));\n});","map":{"version":3,"sources":["C:/desenvolvimento/BarberSchedule/App/src/screens/EstablishmentProfile/index.js"],"names":["React","useState","useEffect","useContext","useNavigation","AsyncStorage","TOKEN_KEY","Location","Api","NumericInputComponent","InputComponent","FlexibleInputComponent","ImagePickerComponent","Container","InputArea","CustomButton","CustomButtonText","InputHorizontalArea","ImageArea","LocalFavButton","LoadingIcon","Scroller","PersonIcon","LocationIcon","ZipCodeIcon","AddressAIcon","HouseNumberIcon","UserContext","DEFAULT_COLLOR_PALLET","userDispatch","dispatch","navigation","loading","setLoading","nameField","setNameField","cepField","setCepField","addressField","setAddressField","addressNumberField","setAddressNumberField","latitude","setLatitude","longitude","setLongitude","imageFieldA","setImageFieldA","imageFieldB","setImageFieldB","imageFieldC","setImageFieldC","imageFieldD","setImageFieldD","imageFieldE","setImageFieldE","imageFieldF","setImageFieldF","getUserProfileData","getItem","token","checkToken","res","type","payload","avatar","name","userAddress","cep","toString","address","number","navigate","handleUpdateClick","updateEstablishmentData","alert","handleLogoutClick","reset","routes","handleCep","findAddressByCep","addressObj","logradouro","localidade","formData","FormData","append","submitMultipartWithFormData","userData","handleFavClick","requestPermissionsAsync","status","setErrorMsg","getCurrentPositionAsync","accuracy","Accuracy","Highest","location","coords","findGeoLocation","geoLocationData","newCep","postcode","t"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport { TOKEN_KEY } from \"../../util/Commons\";\r\nimport * as Location from \"expo-location\";\r\n\r\nimport Api from \"../../Api\";\r\n\r\nimport NumericInputComponent from \"../../components/NumericInputComponent\";\r\nimport InputComponent from \"../../components/InputComponent\";\r\nimport FlexibleInputComponent from \"../../components/FlexibleInputComponent\";\r\nimport ImagePickerComponent from \"../../components/ImagePickerComponent\";\r\n\r\nimport {\r\n  Container,\r\n  InputArea,\r\n  CustomButton,\r\n  CustomButtonText,\r\n  InputHorizontalArea,\r\n  ImageArea,\r\n  LocalFavButton,\r\n  LoadingIcon,\r\n  Scroller\r\n} from \"./styles\";\r\n\r\nimport PersonIcon from \"../../assets/person.svg\";\r\nimport LocationIcon from \"../../assets/crosshair.svg\";\r\nimport ZipCodeIcon from \"../../assets/mail.svg\";\r\nimport AddressAIcon from \"../../assets/placa_a.svg\";\r\nimport HouseNumberIcon from \"../../assets/house_number.svg\";\r\n\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\nimport { DEFAULT_COLLOR_PALLET } from \"../ColorsPalette\";\r\n\r\nexport default () => {\r\n  const { dispatch: userDispatch } = useContext(UserContext);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [nameField, setNameField] = useState(\"\");\r\n  const [cepField, setCepField] = useState();\r\n  const [addressField, setAddressField] = useState(\"\");\r\n  const [addressNumberField, setAddressNumberField] = useState(\"\");\r\n  const [latitude, setLatitude] = useState();\r\n  const [longitude, setLongitude] = useState();\r\n\r\n  const [imageFieldA, setImageFieldA] = useState(null);\r\n  const [imageFieldB, setImageFieldB] = useState(null);\r\n  const [imageFieldC, setImageFieldC] = useState(null);\r\n  const [imageFieldD, setImageFieldD] = useState(null);\r\n  const [imageFieldE, setImageFieldE] = useState(null);\r\n  const [imageFieldF, setImageFieldF] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getUserProfileData = async () => {\r\n      const token = await AsyncStorage.getItem(TOKEN_KEY);\r\n      if (token) {\r\n        let res = await Api.checkToken(token);\r\n        if (res) {\r\n          userDispatch({\r\n            type: \"setUserContext\",\r\n            payload: {\r\n              avatar: res.avatar,\r\n              type: res.type,\r\n            },\r\n          });\r\n          setNameField(res.name);\r\n          if (res.userAddress && res.userAddress.cep) {\r\n            setCepField(res.userAddress.cep.toString());\r\n            setAddressField(res.userAddress.address);\r\n            setAddressNumberField(res.userAddress.number);\r\n          }\r\n        } else {\r\n          navigation.navigate(\"SignIn\");\r\n        }\r\n      } else {\r\n        navigation.navigate(\"SignUp\");\r\n      }\r\n    };\r\n    getUserProfileData();\r\n  }, []);\r\n\r\n  const handleUpdateClick = () => {\r\n    if (\r\n      nameField &&\r\n      cepField &&\r\n      addressField &&\r\n      addressNumberField /* &&\r\n      (imageFieldA ||\r\n        imageFieldB ||\r\n        imageFieldC ||\r\n        imageFieldD ||\r\n        imageFieldE ||\r\n        imageFieldF) */\r\n    ) {\r\n      updateEstablishmentData();\r\n    } else if (!nameField) {\r\n      alert(\"O nome deve ser informado\");\r\n    } else if (!cepField) {\r\n      alert(\r\n        \"Informe o CEP para poder ser localizado pelos usuários do aplicativo.\"\r\n      );\r\n    } else if (!addressNumberField) {\r\n      alert(\"Informe o número do endereço.\");\r\n    } else {\r\n      alert(\"Adicione ao menos uma imagem de capa\");\r\n    }\r\n  };\r\n\r\n  const handleLogoutClick = () => {\r\n    // invalida o token\r\n    // await Api.logout()\r\n    navigation.reset({\r\n      routes: [{ name: \"SignIn\" }],\r\n    });\r\n  };\r\n\r\n  const handleCep = async () => {\r\n    if (cepField) {\r\n      const addressObj = await Api.findAddressByCep(cepField);\r\n      setAddressField(\r\n        addressObj.logradouro ? addressObj.logradouro : addressObj.localidade\r\n      );\r\n    } else {\r\n      setAddressField(\"\");\r\n    }\r\n  };\r\n\r\n  const updateEstablishmentData = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", nameField);\r\n    formData.append(\"cep\", cepField);\r\n    formData.append(\"number\", addressNumberField);\r\n    formData.append(\"latitude\", latitude);\r\n    formData.append(\"longitude\", longitude);\r\n\r\n    const userData = await Api.submitMultipartWithFormData(\r\n      \"users\",\r\n      \"PUT\",\r\n      formData\r\n    );\r\n    if (userData) alert(\"Dados atualizados\");\r\n  };\r\n\r\n  const handleFavClick = async () => {\r\n    setLoading(true);    \r\n    (async () => {\r\n      let { status } = await Location.requestPermissionsAsync();\r\n      if (status !== \"granted\") {\r\n        setErrorMsg(\"Permission to access location was denied\");\r\n        return;\r\n      }\r\n\r\n      let location = await Location.getCurrentPositionAsync({\r\n        accuracy: Location.Accuracy.Highest,\r\n      });\r\n\r\n      setLatitude(location.coords.latitude)\r\n      setLongitude(location.coords.longitude)\r\n      let geoLocationData = await Api.findGeoLocation(\r\n        location.coords.latitude,\r\n        location.coords.longitude\r\n      );\r\n\r\n      const newCep = geoLocationData.address.postcode;\r\n      if (newCep) {\r\n        setCepField(newCep);\r\n        const addressObj = await Api.findAddressByCep(newCep);\r\n        setAddressField(\r\n          addressObj.logradouro ? addressObj.logradouro : addressObj.localidade\r\n        );\r\n      }\r\n      setLoading(false);\r\n    })();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Scroller>\r\n        <InputArea>\r\n          <InputComponent\r\n            IconSvg={PersonIcon}\r\n            placeholder=\"Nome\"\r\n            value={nameField}\r\n            onChangeText={(t) => setNameField(t)}\r\n          />\r\n\r\n          <InputHorizontalArea>\r\n            <LocalFavButton onPress={handleFavClick}>\r\n              <LocationIcon\r\n                width=\"22\"\r\n                height=\"22\"\r\n                fill={DEFAULT_COLLOR_PALLET[0]}\r\n              />\r\n            </LocalFavButton>\r\n            <NumericInputComponent\r\n              IconSvg={ZipCodeIcon}\r\n              placeholder=\"CEP\"\r\n              value={cepField}\r\n              onChangeText={(t) => setCepField(t)}\r\n              onBlur={handleCep}\r\n              maxLength={9}\r\n              width=\"80%\"\r\n            />\r\n          </InputHorizontalArea>\r\n\r\n          <InputComponent\r\n            IconSvg={AddressAIcon}\r\n            placeholder=\"Endereço\"\r\n            value={addressField}\r\n            readOnly={true}\r\n          />\r\n\r\n          <FlexibleInputComponent\r\n            width={35}\r\n            IconSvg={HouseNumberIcon}\r\n            placeholder=\"No\"\r\n            value={addressNumberField}\r\n            onChangeText={(t) => setAddressNumberField(t)}\r\n            maxLength={6}\r\n          />\r\n\r\n          {loading && <LoadingIcon size=\"large\" color=\"#FFFFFF\" />}\r\n\r\n          <ImageArea>\r\n            <ImagePickerComponent\r\n              fieldPlaceholder=\"Imagem\"\r\n              imageField={imageFieldA}\r\n              setimageField={setImageFieldA}\r\n            />\r\n            <ImagePickerComponent\r\n              fieldPlaceholder=\"Imagem\"\r\n              imageField={imageFieldB}\r\n              setimageField={setImageFieldB}\r\n            />\r\n            <ImagePickerComponent\r\n              fieldPlaceholder=\"Imagem\"\r\n              imageField={imageFieldC}\r\n              setimageField={setImageFieldC}\r\n            />\r\n          </ImageArea>\r\n          <ImageArea>\r\n            <ImagePickerComponent\r\n              fieldPlaceholder=\"Imagem\"\r\n              imageField={imageFieldD}\r\n              setimageField={setImageFieldD}\r\n            />\r\n            <ImagePickerComponent\r\n              fieldPlaceholder=\"Imagem\"\r\n              imageField={imageFieldE}\r\n              setimageField={setImageFieldE}\r\n            />\r\n            <ImagePickerComponent\r\n              fieldPlaceholder=\"Imagem\"\r\n              imageField={imageFieldF}\r\n              setimageField={setImageFieldF}\r\n            />\r\n          </ImageArea>         \r\n\r\n          <CustomButton onPress={handleUpdateClick}>\r\n            <CustomButtonText>ATUALIZAR</CustomButtonText>\r\n          </CustomButton>\r\n          <CustomButton onPress={handleLogoutClick}>\r\n            <CustomButtonText>SAIR</CustomButtonText>\r\n          </CustomButton>\r\n        </InputArea>\r\n      </Scroller>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}