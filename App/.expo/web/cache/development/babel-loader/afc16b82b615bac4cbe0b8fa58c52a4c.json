{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\desenvolvimento\\\\BarberSchedule\\\\App\\\\src\\\\components\\\\ModalErro.js\";\n\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    height: 500,\n    width: 350\n  },\n  button: {\n    borderRadius: 30,\n    padding: 10,\n    elevation: 10,\n    height: 65,\n    width: 65,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonClose: {\n    backgroundColor: \"#b641a9\",\n    marginTop: 270\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 20,\n    marginBottom: -180,\n    marginTop: 150,\n    textAlign: \"center\"\n  },\n  modalTextTitle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 25,\n    marginBottom: -110,\n    marginTop: 20,\n    textAlign: \"center\",\n    padding: 30\n  }\n});\nexport default (function (_ref) {\n  var controlObject = _ref.controlObject;\n  var setVisible = controlObject.isModalVisible ? true : false;\n\n  var updateVisibility = function updateVisibility() {\n    setVisible = false;\n    controlObject.cb(false);\n  };\n\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: setVisible,\n    onRequestClose: function onRequestClose() {\n      console.log(\"Modal has been closed.\");\n      updateVisibility();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.modalTextTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Erro \"), React.createElement(Text, {\n    style: styles.modalText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, controlObject.errorMessage), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return updateVisibility();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Ok\")))));\n});","map":{"version":3,"sources":["C:/desenvolvimento/BarberSchedule/App/src/components/ModalErro.js"],"names":["React","useState","styles","StyleSheet","create","centeredView","flex","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowOpacity","shadowRadius","elevation","height","width","button","buttonClose","textStyle","color","fontWeight","textAlign","modalText","fontSize","marginBottom","modalTextTitle","controlObject","setVisible","isModalVisible","updateVisibility","cb","console","log","errorMessage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n    height: 500,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    borderRadius: 30,\r\n    padding: 10,\r\n    elevation: 10,\r\n    height: 65,\r\n    width: 65,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  buttonClose: {\r\n    backgroundColor: \"#b641a9\",\r\n    marginTop: 270,\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 20,\r\n    marginBottom: -180,\r\n    marginTop: 150,\r\n    textAlign: \"center\",\r\n  },\r\n  modalTextTitle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 25,\r\n    marginBottom: -110,\r\n    marginTop: 20,\r\n    textAlign: \"center\",\r\n    padding: 30,\r\n  },\r\n});\r\n\r\nexport default ({ controlObject }) => {\r\n  let setVisible = controlObject.isModalVisible ? true : false;\r\n\r\n  const updateVisibility = () => {\r\n    setVisible = false;\r\n    controlObject.cb(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={setVisible}\r\n      onRequestClose={() => {\r\n        console.log(\"Modal has been closed.\");\r\n        updateVisibility();\r\n      }}\r\n    >\r\n      <View style={styles.centeredView}>\r\n        <View style={styles.modalView}>\r\n          <Text style={styles.modalTextTitle}>Erro </Text>\r\n          <Text style={styles.modalText}>{controlObject.errorMessage}</Text>\r\n          <Pressable\r\n            style={[styles.button, styles.buttonClose]}\r\n            onPress={() => updateVisibility()}\r\n          >\r\n            <Text style={styles.textStyle}>Ok</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}