{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\desenvolvimento\\\\BarberSchedule\\\\App\\\\src\\\\screens\\\\Search\\\\index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport * as Location from \"expo-location\";\nimport Api from \"../../Api\";\nimport BarberItem from \"../../components/BarberItem\";\nimport SearchIcon from \"../../assets/search.svg\";\nimport MyLocationIcon from \"../../assets/my_location.svg\";\nimport SetaIcon from \"../../assets/expand.svg\";\nimport ModalErro from \"../../components/ModalErro\";\nimport { Container, Scroller, HeaderArea, HeaderTitle, SearchButton, LocationArea, LocationInput, LocationFinder, LoadingIcon, ListArea, AvaliacaoButton, DistanceButton, ButtonText, ButtonArea, FiltroLabel, NameArea, NameInput } from \"./styles\";\nexport default (function () {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationText = _useState2[0],\n      setLocationText = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addressSearchObject = _useState4[0],\n      setAddressSearchObject = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      list = _useState8[0],\n      setList = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      refreshing = _useState10[0],\n      setRefreshing = _useState10[1];\n\n  var _useState11 = useState({\n    'isModalVisible': false,\n    'errorMessage': '',\n    'cb': setModalAttributes\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalAttributes = _useState12[0],\n      setModalAttributes = _useState12[1];\n\n  var handleGeoLocationControl = function handleGeoLocationControl() {\n    return _regeneratorRuntime.async(function handleGeoLocationControl$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setAddressSearchObject({});\n            setLoading(true);\n            setLocationText(\"\");\n            setList([]);\n\n            (function _callee() {\n              var _await$Location$reque, status, location, geoLocationData;\n\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n                    case 2:\n                      _await$Location$reque = _context.sent;\n                      status = _await$Location$reque.status;\n\n                      if (!(status !== \"granted\")) {\n                        _context.next = 7;\n                        break;\n                      }\n\n                      setErrorMsg(\"Permission to access location was denied\");\n                      return _context.abrupt(\"return\");\n\n                    case 7:\n                      _context.next = 9;\n                      return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n                        accuracy: Location.Accuracy.Highest\n                      }));\n\n                    case 9:\n                      location = _context.sent;\n                      _context.next = 12;\n                      return _regeneratorRuntime.awrap(Api.findGeoLocation(location.coords.latitude, location.coords.longitude));\n\n                    case 12:\n                      geoLocationData = _context.sent;\n                      setAddressSearchObject(_objectSpread(_objectSpread({}, addressSearchObject), {\n                        cep: geoLocationData.address.postcode,\n                        latitude: geoLocationData.lat,\n                        longitude: geoLocationData.lon,\n                        street: geoLocationData.address.road,\n                        city: geoLocationData.address.city\n                      }));\n                      setLocationText(geoLocationData.address.city);\n\n                    case 15:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            })();\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getBarbers = function getBarbers() {\n    var res;\n    return _regeneratorRuntime.async(function getBarbers$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setList([]);\n\n            if (!locationText) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(Api.getBarbers(addressSearchObject));\n\n          case 5:\n            res = _context3.sent;\n            setList(res.data);\n            setLoading(false);\n            _context3.next = 14;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](2);\n            setLoading(false);\n            setModalAttributes({\n              'isModalVisible': true,\n              'errorMessage': _context3.t0.message,\n              'cb': setModalAttributes\n            });\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[2, 10]], Promise);\n  };\n\n  useEffect(function () {\n    handleGeoLocationControl();\n  }, []);\n  useEffect(function () {\n    getBarbers();\n  }, [locationText]);\n\n  var onRefresh = function onRefresh() {\n    setRefreshing(false);\n    getBarbers();\n  };\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      searchText = _useState14[0],\n      setSearchText = _useState14[1];\n\n  useEffect(function () {\n    var OterList = _toConsumableArray(list);\n\n    if (searchText === \"\") {\n      getBarbers();\n    } else {\n      setList(OterList.filter(function (item) {\n        return item.name.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n      }));\n    }\n  }, [searchText]);\n\n  var handleOrdering = function handleOrdering() {\n    var newList;\n    return _regeneratorRuntime.async(function handleOrdering$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            newList = _toConsumableArray(list);\n            setList([]);\n            setList(newList.sort(function (a, b) {\n              return b.stars < a.stars ? -1 : b.stars > a.stars ? 1 : 0;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleDistance = function handleDistance() {\n    var newList;\n    return _regeneratorRuntime.async(function handleDistance$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            newList = _toConsumableArray(list);\n            setList([]);\n            setList(newList.sort(function (a, b) {\n              return a.distance < b.distance ? -1 : a.distance > b.distance ? 1 : 0;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, React.createElement(ModalErro, {\n    controlObject: modalAttributes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), React.createElement(Scroller, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(HeaderArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, React.createElement(HeaderTitle, {\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Encontre o melhor sal\\xE3o\"), React.createElement(SearchButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, React.createElement(SearchIcon, {\n    width: \"26\",\n    height: \"26\",\n    fill: \"#FFFFFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }))), React.createElement(LocationArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, React.createElement(LocationInput, {\n    placeholder: \"Onde voc\\xEA est\\xE1?\",\n    placeholderTextColor: \"#FFFFFF\",\n    value: locationText,\n    onChangeText: function onChangeText(t) {\n      return setLocationText(t);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), React.createElement(LocationFinder, {\n    onPress: handleGeoLocationControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, React.createElement(MyLocationIcon, {\n    width: \"24\",\n    height: \"24\",\n    fill: \"#FFFFFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }))), React.createElement(NameArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, React.createElement(NameInput, {\n    placeholder: \"Pesquise por nome....\",\n    placeholderTextColor: \"#FFFFFF\",\n    value: searchText,\n    onChangeText: function onChangeText(t) {\n      return setSearchText(t);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  })), React.createElement(ButtonArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, React.createElement(FiltroLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Ordenar por:\"), React.createElement(DistanceButton, {\n    onPress: handleDistance,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, React.createElement(ButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Dist\\xE2ncia\"), React.createElement(SetaIcon, {\n    width: \"17\",\n    height: \"17\",\n    fill: \"#FFFFFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  })), React.createElement(AvaliacaoButton, {\n    onPress: handleOrdering,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, React.createElement(ButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, \"Avalia\\xE7\\xE3o\"), React.createElement(SetaIcon, {\n    width: \"17\",\n    height: \"17\",\n    fill: \"#FFFFFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }))), loading && React.createElement(LoadingIcon, {\n    size: \"large\",\n    color: \"#FFFFFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }), React.createElement(ListArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, list.map(function (item, k) {\n    return React.createElement(BarberItem, {\n      key: k,\n      data: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    });\n  }))));\n});","map":{"version":3,"sources":["C:/desenvolvimento/BarberSchedule/App/src/screens/Search/index.js"],"names":["React","useState","useEffect","Location","Api","BarberItem","SearchIcon","MyLocationIcon","SetaIcon","ModalErro","Container","Scroller","HeaderArea","HeaderTitle","SearchButton","LocationArea","LocationInput","LocationFinder","LoadingIcon","ListArea","AvaliacaoButton","DistanceButton","ButtonText","ButtonArea","FiltroLabel","NameArea","NameInput","locationText","setLocationText","addressSearchObject","setAddressSearchObject","loading","setLoading","list","setList","refreshing","setRefreshing","setModalAttributes","modalAttributes","handleGeoLocationControl","requestPermissionsAsync","status","setErrorMsg","getCurrentPositionAsync","accuracy","Accuracy","Highest","location","findGeoLocation","coords","latitude","longitude","geoLocationData","cep","address","postcode","lat","lon","street","road","city","getBarbers","res","data","message","onRefresh","searchText","setSearchText","OterList","filter","item","name","toLowerCase","indexOf","handleOrdering","newList","sort","a","b","stars","handleDistance","distance","t","map","k"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { RefreshControl } from \"react-native\";\r\nimport * as Location from \"expo-location\";\r\nimport Api from \"../../Api\";\r\nimport BarberItem from \"../../components/BarberItem\";\r\nimport SearchIcon from \"../../assets/search.svg\";\r\nimport MyLocationIcon from \"../../assets/my_location.svg\";\r\nimport SetaIcon from \"../../assets/expand.svg\";\r\nimport ModalErro from \"../../components/ModalErro\";\r\n\r\nimport {\r\n  Container,\r\n  Scroller,\r\n  HeaderArea,\r\n  HeaderTitle,\r\n  SearchButton,\r\n  LocationArea,\r\n  LocationInput,\r\n  LocationFinder,\r\n  LoadingIcon,\r\n  ListArea,\r\n  AvaliacaoButton,\r\n  DistanceButton,\r\n  ButtonText,\r\n  ButtonArea,\r\n  FiltroLabel,\r\n  NameArea,\r\n  NameInput,\r\n} from \"./styles\";\r\n\r\nexport default () => {\r\n  const [locationText, setLocationText] = useState(\"\");\r\n  const [addressSearchObject, setAddressSearchObject] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [modalAttributes, setModalAttributes] = useState({'isModalVisible': false, 'errorMessage': '', 'cb': setModalAttributes});\r\n\r\n  const handleGeoLocationControl = async () => {\r\n    setAddressSearchObject({});\r\n    setLoading(true);\r\n    setLocationText(\"\");\r\n    setList([]);\r\n\r\n    (async () => {\r\n      let { status } = await Location.requestPermissionsAsync();\r\n      if (status !== \"granted\") {\r\n        setErrorMsg(\"Permission to access location was denied\");\r\n        return;\r\n      }\r\n\r\n      let location = await Location.getCurrentPositionAsync({\r\n        accuracy: Location.Accuracy.Highest,\r\n      });\r\n\r\n      let geoLocationData = await Api.findGeoLocation(\r\n        location.coords.latitude,\r\n        location.coords.longitude\r\n      );\r\n      setAddressSearchObject({\r\n        ...addressSearchObject,\r\n        ...{\r\n          cep: geoLocationData.address.postcode,\r\n          latitude: geoLocationData.lat,\r\n          longitude: geoLocationData.lon,\r\n          street: geoLocationData.address.road,\r\n          city: geoLocationData.address.city,\r\n        },\r\n      });\r\n      setLocationText(geoLocationData.address.city);\r\n    })();\r\n  };\r\n\r\n  const getBarbers = async () => {\r\n    setList([]);\r\n\r\n    if (locationText) {\r\n      try {\r\n        let res = await Api.getBarbers(addressSearchObject);\r\n        setList(res.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setModalAttributes({'isModalVisible': true, 'errorMessage': error.message, 'cb': setModalAttributes})\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGeoLocationControl();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBarbers();\r\n  }, [locationText]);\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(false);\r\n    getBarbers();\r\n  };\r\n\r\n  const [searchText, setSearchText] = useState();\r\n\r\n  useEffect(() => {\r\n    let OterList = [...list];\r\n    if (searchText === \"\") {\r\n      getBarbers();\r\n    } else {\r\n      setList(\r\n        OterList.filter(\r\n          (item) =>\r\n            item.name.toLowerCase().indexOf(searchText.toLowerCase()) > -1\r\n        )\r\n      );\r\n    }\r\n  }, [searchText]);\r\n\r\n  const handleOrdering = async () => {\r\n    let newList = [...list];\r\n    setList([]);\r\n\r\n    setList(\r\n      newList.sort((a, b) =>\r\n        b.stars < a.stars ? -1 : b.stars > a.stars ? 1 : 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDistance = async () => {\r\n    let newList = [...list];\r\n    setList([]);\r\n\r\n    setList(newList.sort((a, b) => (a.distance < b.distance ? -1 : a.distance > b.distance ? 1 : 0)));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ModalErro controlObject={modalAttributes} />\r\n      <Scroller\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n        }\r\n      >\r\n        <HeaderArea>\r\n          <HeaderTitle numberOfLines={2}>Encontre o melhor salão</HeaderTitle>\r\n          <SearchButton>\r\n            <SearchIcon width=\"26\" height=\"26\" fill=\"#FFFFFF\" />\r\n          </SearchButton>\r\n        </HeaderArea>\r\n\r\n        <LocationArea>\r\n          {/*\r\n              onEndEditing={handleLocationSearch}\r\n              tem que ser melhor pensado.\r\n            */}\r\n          <LocationInput\r\n            placeholder=\"Onde você está?\"\r\n            placeholderTextColor=\"#FFFFFF\"\r\n            value={locationText}\r\n            onChangeText={(t) => setLocationText(t)}\r\n          />\r\n          <LocationFinder onPress={handleGeoLocationControl}>\r\n            <MyLocationIcon width=\"24\" height=\"24\" fill=\"#FFFFFF\" />\r\n          </LocationFinder>\r\n        </LocationArea>\r\n\r\n        <NameArea>\r\n          <NameInput\r\n            placeholder=\"Pesquise por nome....\"\r\n            placeholderTextColor=\"#FFFFFF\"\r\n            value={searchText}\r\n            onChangeText={(t) => setSearchText(t)}\r\n          />\r\n        </NameArea>\r\n\r\n        <ButtonArea>\r\n          <FiltroLabel>Ordenar por:</FiltroLabel>\r\n          <DistanceButton onPress={handleDistance}>\r\n            <ButtonText>Distância</ButtonText>\r\n            <SetaIcon width=\"17\" height=\"17\" fill=\"#FFFFFF\" />\r\n          </DistanceButton>\r\n          <AvaliacaoButton onPress={handleOrdering}>\r\n            <ButtonText>Avaliação</ButtonText>\r\n            <SetaIcon width=\"17\" height=\"17\" fill=\"#FFFFFF\" />\r\n          </AvaliacaoButton>\r\n        </ButtonArea>\r\n\r\n        {loading && <LoadingIcon size=\"large\" color=\"#FFFFFF\" />}\r\n\r\n        <ListArea>\r\n          {list.map((item, k) => (\r\n            <BarberItem key={k} data={item} />\r\n          ))}\r\n        </ListArea>\r\n      </Scroller>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}